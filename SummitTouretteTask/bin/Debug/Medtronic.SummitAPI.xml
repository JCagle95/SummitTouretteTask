<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Medtronic.SummitAPI</name>
    </assembly>
    <members>
        <member name="T:Medtronic.SummitAPI.Classes.APIReturnInfo">
            <summary>
            Function Return Structure that indicates the result of an API command
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.RejectCodeType">
            <summary>
            The type or source of the reject being returned by the API
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.RejectCode">
            <summary>
            Integer reject code, refer to system reject code mapping documents for breakdown
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.InsCommandCode">
            <summary>
            Byte-level command code that indicates what packet resulted in the error
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.CtmCommandCode">
            <summary>
            Byte-level command code that indicates what packet resulted in the error
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.Descriptor">
            <summary>
            A user-friendly string that indicates what went wrong
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.TxTime">
            <summary>
            Datetime object when the packet was sent
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIReturnInfo.unixTxTime">
            <summary>
            Serializable UnixTimestamp for when the packet was sent 
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.RxTime">
            <summary>
            Datetime object when the response was received
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIReturnInfo.unixRxTime">
            <summary>
            Serializable UnixTimestamp for when the response was received
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.TransmitAttempts">
            <summary>
            Number of transmit attempts required to receive a response within timeout
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.APIReturnInfo.TheLinkStatus">
            <summary>
            Link status byte from the telemetry layer
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.APIReturnInfo.#ctor(Medtronic.NeuroStim.Olympus.Commands.MasterRejectCode,Medtronic.NeuroStim.Olympus.Commands.CommandCodes,System.String,System.DateTime,System.DateTime,System.Int32,Medtronic.NeuroStim.Olympus.Frames.LinkStatusByte)">
            <summary>
            Constructor for the API return code structure when an error results from the CTM or INS
            </summary>
            <param name="insReject">Reject Code enumerable based off of the packet type</param>
            <param name="executionCount">The number of times the packet was transmitted to the INS before success</param>
            <param name="theRxTime">The time when the response was received by the host PC</param>
            <param name="theTxTime">The time when the command was sent to the INS by the host PC</param>
            <param name="theCommand">Byte-level command code that indicates what packet resulted in the error</param>
            <param name="linkstatus">Object indicating ins global status otherwise not contained in other functions, such as global level error flags or other unusual states.</param>
            <param name="errorDescriptor">A user-friendly string that indicates what went wrong</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.APIReturnInfo.#ctor(Medtronic.SummitAPI.Classes.APIRejectCodes,Medtronic.NeuroStim.Olympus.Commands.CommandCodes,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Constructor for the API return code structure when an error results from the DLL
            </summary>
            <param name="dllReject">Reject Code enumerable based off of the packet type</param>
            <param name="theCommand">Byte-level command code that indicates what packet resulted in the error</param>
            <param name="theRxTime">The time when the response was received by the host PC</param>
            <param name="theTxTime">The time when the command was sent to the INS by the host PC</param>
            <param name="executionCount">The number of times the packet was transmitted to the INS before success</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.APIReturnInfo.#ctor(Medtronic.TelemetryM.CtmProtocol.Commands.CommandResponseCodes,Medtronic.TelemetryM.CtmProtocol.Commands.CommandIds,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Constructof for the API return code structure when an error results from the CommPlatform Downlink
            </summary>
            <param name="downlinkReject">Reject code enumerable from the comm platform downlink object</param>
            <param name="executionCount">The number of times the packet was transmitted to the INS before success</param>
            <param name="theCommand">Command that the reject code applies to</param>
            <param name="theRxTime">The time when the response was received by the host PC</param>
            <param name="theTxTime">The time when the command was sent to the INS by the host PC</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.APIReturnInfo.#ctor(Medtronic.TelemetryM.InstrumentReturnCode,Medtronic.TelemetryM.CtmProtocol.Commands.CommandIds,System.DateTime,System.DateTime,System.Int32)">
            <summary>
            Constructof for the API return code structure when an error results from the CommPlatform Downlink
            </summary>
            <param name="downlinkReject">Reject code enumerable from the comm platform downlink object</param>
            <param name="executionCount">The number of times the packet was transmitted to the INS before success</param>
            <param name="theCommand">Command that the reject code applies to</param>
            <param name="theRxTime">The time when the response was received by the host PC</param>
            <param name="theTxTime">The time when the command was sent to the INS by the host PC</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.ConnectException">
            <summary>
            StartInsSession internal exception throwing object
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectException.TheConnectReturn">
            <summary>
            The ConnectReturn flags that the StartInsSession function should return to the host application
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectException.TheApiReturnInfo">
            <summary>
            The APIReturnInfo object that the StartInsSession will return to the host application through the output parameter
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.ConnectException.#ctor(Medtronic.SummitAPI.Classes.ConnectReturn,Medtronic.SummitAPI.Classes.APIReturnInfo)">
            <summary>
            Constructor for the ConnectException object
            </summary>
            <param name="aConnectReturn"> The ConnectReturn flags that the StartInsSession function should return to the user</param>
            <param name="aReturnInfo"> The APIReturnInfo object that the StartInsSession will return to the user through the output parameter</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.LoopRecord">
            <summary>
            A class object that represents a loop record
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.LoopRecord.LrStatus">
            <summary>
            Status information for the contained loop record
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.LoopRecord.ChannelSamples">
            <summary>
            Time domain data contained in the INS loop record
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.LoopRecord.EvokedMarker">
            <summary>
            Evoked response marker stream information from the INS
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.StreamState">
            <summary>
            A class that contains boolean flags indicating which data streams are active from the Olympus RC+S
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.StreamsEnabled">
            <summary>
            Indicates if streaming is enabled for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.TimeSyncStreamEnabled">
            <summary>
            Indicates if time-synchronization data is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.TimeDomainStreamEnabled">
            <summary>
            Indicates if time-domain data is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.FftStreamEnabled">
            <summary>
            Indicates if FFT data is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.PowerDomainStreamEnabled">
            <summary>
            Indicates if FFT-calculated power band data is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.AccelStreamEnabled">
            <summary>
            Indicates if accelerometry is bieng streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.DetectionStreamEnabled">
            <summary>
            Indicates if linear-discriminate detection state is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.AdaptiveStreamEnabled">
            <summary>
            Indicates if linear-discriminate detection state is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.LoopRecordMarkerEchoStreamEnabled">
            <summary>
            Indicates if linear-discriminate detection state is being streamed for this device
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.theMask1">
            <summary>
            Raw mask value for mask 1 stream fields
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.StreamState.theMask2">
            <summary>
            Raw mask value for the mask 2 stream fields
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.StreamState.#ctor(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.StreamGroupMask1,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.StreamGroupMask2)">
            <summary>
            Constructor for the stream state object, internal use only.
            </summary>
            <param name="streamMask1">Stream mask 1 - defined by firmware protocol</param>
            <param name="streamMask2">Stream mask 2 - defined by firmware protocol</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.StreamState.GetLength">
            <summary>
            Retrieves the length in bytes of the object
            </summary>
            <returns>Returns the length in bytes of the object</returns>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.SummitSystem">
            <summary>
            Interface object for a Summit system for command and control of an Olympus RC+S INS
            </summary>
            <summary>
            Interface object for a Summit system for command and control of an Olympus RC+S INS
            </summary>
            <summary>
            Interface object for a Summit system for command and control of an Olympus RC+S INS
            </summary>
            <summary>
            Interface object for a Summit system for command and control of an Olympus RC+S INS
            </summary>
            <summary>
            Interface object for a Summit system for command and control of an Olympus RC+S INS
            </summary>
            <summary>
            Interface object for a Summit system for command and control of an Olympus RC+S INS
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadSensingLoopRecordStatus(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.LoopRecordingStatus@)">
            <summary>
            Reads the current state of the on-board Loop Recorder on the INS
            </summary>
            <param name="theLoopRecordStatus">Output buffer that will be written with the current status of the loop recorder retrieved from the INS. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadSensingLoopRecordData(Medtronic.SummitAPI.Classes.LoopRecord@)">
            <summary>
            Function first reads the loop record status. If there is a recording ready, it downloads and logs to a file.
            </summary>
            <param name="theLoopRecord">Output buffer that will be written with the loop recording retrieved from the INS. Null if an error occured or if there is no loop record to retrieve.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashLogResetStimTime(Medtronic.NeuroStim.Olympus.DataTypes.Diagnostic.DiagnosticResetType)">
            <summary>
            Resets the INS's on-board stim timer. The stim timer tracks the amount of time since last reset that stimulation has been active.
            </summary>
            <param name="theResetType">The type of reset to apply, can either clear all data or just follow-up data</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashLogReadLogEntry(Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashLogTypes,System.UInt16,System.Collections.Generic.List{Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.LogEntry}@,System.Boolean,System.Byte,System.Byte)">
            <summary>
            Reads log entries stored on the INS.
            </summary>
            <param name="selectedLog">Enumerable indicating which log type to read</param>
            <param name="entriesToRead">Number of entries to read from start index</param>
            <param name="theRetrievedEntries">Output buffer that will be written with the log entries retrieved fromm the INS. Null if an error occured.</param>
            <param name="filterEnable">Enabling filtering of logs to retrieve only a sepecific entry type defined by offset and value, defaults to false</param>
            <param name="filterOffset">The byte within the log entry to compare filter value to</param>
            <param name="filterValue">The byte value to compare the filter offset's defined byte number in each log</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashLogGetInfo(Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashLogTypes,Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.LogInfo@)">
            <summary>
            Request info from the INS about a selected log
            </summary>
            <param name="selectedLog">The log to retrieve information about</param>
            <param name="theLogInfo">Output buffer that will be written with the selected log information retrieved from the INS. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashLogExternalEventOnIns(System.Byte)">
            <summary>
            Sends an external marker to the INS for on-board logging. Can be used to trigger a loop record if enabled (userDefinedEventType = 0xFF)
            </summary>
            <param name="userDefinedEventType">User-defined byte for state logging on INS, 0xFF triggers a loop record if configured to do so and not already triggered</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingEnableStreams(System.Boolean)">
            <summary>
            Enables all streams when enableAll is set to true
            </summary>
            <param name="enableAll">If true, all streams are enabled</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingEnableStreams(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Configures which sensors to enable streaming data from
            </summary>
            <param name="streamTD">Enable Time-Domain streaming</param>
            <param name="streamFFT">Enable FFT streaming</param>
            <param name="streamPWR">Enable Power streaming</param>
            <param name="streamDetector">Enable LD detector events</param>
            <param name="streamAdaptiveState">Enables Adaptive Stim algorithm state change events</param>
            <param name="streamAccel">Enable Accelerometer data streaming</param>
            <param name="streamTime">Enable Time-Sync streaming</param>
            <param name="streamLoopRecordMarkerEcho">Enable loop record status updates and external marker echoing</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingDisableStreams(System.Boolean)">
            <summary>
            Disables all streams when disable all is set to true
            </summary>
            <param name="disableAll">If true, all streams are disabled</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingDisableStreams(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Configures which sensors to disable streaming data from
            </summary>
            <param name="streamTD">Disable Time-Domain streaming</param>
            <param name="streamFFT">Disable FFT streaming</param>
            <param name="streamPWR">Disable Power streaming</param>
            <param name="streamDetector">disable LD detector events</param>
            <param name="streamAdaptiveState">Enables Adaptive Stim algorithm state change events</param>
            <param name="streamAccel">Disable Accelerometer data streaming</param>
            <param name="streamTime">Disable Time-Sync streaming</param>
            <param name="streamLoopRecordMarkerEcho">Enable loop record status updates and external marker echoing</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadSensingStreamState(Medtronic.SummitAPI.Classes.StreamState@)">
            <summary>
            Reads the current streaming configuration from the connected device.
            </summary>
            <returns>Returns a structure that contains boolean flags indicating which data streams are enabled from the device.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.LogTroubleshootingReport">
            <summary>
            Ensures the full state of the device is logged out to session JSON logs. This includes all on-board mirrors, logs, and flash. 
            Warning: This may take a long time! The flash logs are very long.
            </summary>
            <returns>This function is best-effort and does not report errors. Returned structure always indicates command was successful. All errors encountered are populated in the error log.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.LogCustomEvent(System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            Log a key-value pair in a timestamped JSON object in the controlled application log.
            </summary>
            <param name="theOnsetTime">Event start time </param>
            <param name="theOffsetTime">Event end time, if point event use onset time</param>
            <param name="theEventType">Event type, see documentation for specific uses based on event name</param>
            <param name="theEventSubType">Event subtype, see documentation for specific uses based on event name/type</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.LogEvent(Medtronic.SummitAPI.Classes.EventNames,System.DateTime,System.DateTime,System.String,System.String)">
            <summary>
            Logs a specific event type with timestamp to the Summit event log.
            </summary>
            <param name="theEventName">Controlled name of event, use enumerable event name type</param>
            <param name="theOnsetTime">Event start time </param>
            <param name="theOffsetTime">Event end time, if point event use onset time</param>
            <param name="theEventType">Event type, see documentation for specific uses based on event name</param>
            <param name="theEventSubType">Event subtype, see documentation for specific uses based on event name/type</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.CalculateLatency(System.UInt32,System.Nullable{System.TimeSpan}@)">
            <summary>
            Averages the round-trip time for a number of sent packet and returns the average one-way communication latency 
            </summary>
            <param name="testNum">Number of packets to send to determine average latency measurement</param>
            <param name="averageLatency">Output buffer that will be written with the average one-way latency between INS and host PC. Determined by taking average round trip time divided by two. Returns Null if there was an unexpected error</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>
            This command sends a number of malformed packets, specified by testnum, to the INS to measure the communication latency between the API and the INS.
            Malformed packets are used such that the INS will send an immediate reject instead of processing to reduce the INS packet turn-around time. 
            After the specified number of packets have been sent, the average in-flight duration is calculated and divided by two to return an average one-way latency.
            </description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.LeadIntegrityTest(System.Collections.Generic.List{System.Tuple{System.Byte,System.Byte}},Medtronic.NeuroStim.Olympus.DataTypes.Measurement.LeadIntegrityTestResult@)">
            <summary>
            Tests the impedance between up to 16 electrode contact pairs.
            </summary>
            <param name="testElectrodes">a tuple list of which pair of electrodes to test impedances between. Item1 is the anode, item2 is the cathode.</param>
            <param name="theTestResults">Output buffer that will be written with the lead integrity test results</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.LeadIntegrityTest(System.Collections.Generic.List{System.Byte},Medtronic.NeuroStim.Olympus.DataTypes.Measurement.LeadIntegrityTestResult@)">
            <summary>
            Tests the impedance between up to 16 electrode contact pairs.
            </summary>
            <param name="testElectrodes">A flattened list of the electrodes to test impedance between. Alternates between anode/cathode pairs.</param>
            <param name="theTestResults">Output buffer that will be written with the lead integrity test results</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.AuthenicationRequestChallenge(System.Nullable{System.UInt32}@)">
            <summary>
            Requests a random number from the INS to use as an authenication challenge
            </summary>
            <param name="theChallenge">Output buffer that will be written with the authenication challenge value</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.AuthenicationChallengeResponse(Medtronic.NeuroStim.Olympus.DataTypes.Core.AuthenticationType,System.UInt16)">
            <summary>
            Send an authenication response back to the INS
            </summary>
            <param name="theAuthenicationType">Type of requested authenication level</param>
            <param name="challengeResponse">The generated response using the authenication level's key</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.EstimatePacketDateTime(System.UInt32,System.UInt16,Medtronic.SummitAPI.Classes.TimesyncTimestamp)">
            <summary>
            Private: Estimates the time that an action occured on the INS based on the time synchronization and timestamps
            </summary>
            <param name="MedtronicEpochTimestamp">INS action timestamp in seconds</param>
            <param name="MedtronicEpochTicks">INS action tick count in 100uS</param>
            <param name="LastRxTimestamp">The last timestamp information received from the INS</param>
            <returns>Datetime object with the packet's estimated dateTime, datetime(0) if an error occured.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FindConfigEntryByName(System.String)">
            <summary>
            Private: config file entry search predicate. Used to extract real-unit conversion callibration parameters
            </summary>
            <param name="theName">the config file name to search for</param>
            <returns></returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.#ctor(Medtronic.TelemetryM.IInstrument,Medtronic.TelemetryM.InstrumentPhysicalLayers,System.String,System.UInt16,System.Byte)">
            <summary>
            Constructor for the Summit System object
            </summary>
            <param name="theInstrument">The communication interface to connect to and use for this Summit Session</param>
            <param name="connectionType">The type of connection to make to the underlying telemetry device</param>
            <param name="orcaProject">The ORCA controlled name of the project</param>
            <param name="theMode">The telemetry mode to use between CTM and INS, advanced users only. Can be 3 or 4</param>
            <param name="theRatio">The telemetry uplink/downlink ratio to use between CTM and INS, advanced users only.</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.onTheOlympusConnectionChange(System.Object,Medtronic.TelemetryM.ConnectionStatusChangedEventArgs)">
            <summary>
            Listens for CTM connection changes, only triggers actions if a disconnection occurs without dispose being flagged
            </summary>
            <param name="sender">the instrument that raised event, always TheOlympus</param>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.onFileLoggerIOException(System.Object,Medtronic.SummitAPI.Events.IOExceptionEvent)">
            <summary>
            Listens for FileLogger IOException errors and pushes decision to SummitManager to take action
            </summary>
            <param name="sender">Object sending the error</param>
            <param name="theEvent">The IOException that was encountered</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.OlympusDiscovery(System.Collections.Generic.List{Medtronic.TelemetryM.DiscoveredDevice}@)">
            <summary>
            Discovers Implantable Olympus systems that can be connected to via telemetry
            </summary>
            <param name="theDiscoveredDevices">Output variable that provides a list of all discovered Olympus RC+S devices</param>
            <returns>A list of Olympus RC+S IDs that were discovered. If multiple items are returned, should move telemetry and try again. Returns null if no CTM is connected</returns>
            <description>
            This function tells the CTM to perform a proximal discovery of Olympus RC+S devices. Upon discovery the CTM bonds with the devices allowing for a general session to be started with the OlympusConnect method.
            If the CTM cannot find an Olympus RC+S proximally, it will attempt to perform a discovery over distant telemetry to find the last device it has paired to. 
            If the device is within range and 12 hours have not elapsed since this CTM communicated with that INS, then a distant discovery is possible. 
            </description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StartInsSession(System.Nullable{Medtronic.TelemetryM.DiscoveredDevice},Medtronic.SummitAPI.Classes.ConnectReturn@,System.Boolean)">
            <summary>
            Starts a session with a specific Summit implantable neurostimulation device
            </summary>
            <param name="theInsInfo">Requested Ins to connect to. CTMs connect to nearest INS, TMTIs connect to requested INS</param>
            <param name="returnState">Output variable for accessing details on the initialization. If ApiReturnInfo.RejectCode does not equal zero, the error flag will be set. 
            Otherwise, system warnings indicate if memory corruption has occured or if the subject info block has not been configured</param>
            <param name="disableAnnotations">A request to disable or enable annotations for this session. Human-use devices can not have annnotations disabled</param>
            <returns>Returned structure indicating if the connection was successful or not</returns>
            <description>Connects to a Olympus RC+S device discovered through the OlympusDiscovery Command. 
            This command first initializes the connection to the device, and checks to see if the device is an Olympus RC+S and is compatible with this version of the API.
            It then initializes the logs and queries the INS for it's initial state. Once the initial state is written down to the logs, it then uses ORCA to present annotation forms to the user.
            After annotation forms are completed, a few diagnostic tests are performed to determine the communication latency and flash mirror integrity. Once OlympusConnect finishes, other API commands are usable.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ConnectIns(System.Boolean)">
            <summary>
            Internal use only in InsConnect or automatic session recovery in the case of an unexpected disconnect.
            </summary>
            <returns>Returned structure indicating if the commands were successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.InitInsStateAndLog">
            <summary>
            Manually (without the execute function) send all the packets to collect the device's initial state
            </summary>
            <returns>Returned structure indicating if the commands to INS were successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.Dispose(System.Boolean)">
            <summary>
            Required for internal IDisposable Support
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.CloseSession(System.Boolean)">
            <summary>
            Closes the session with the INS based on where in the initialization cycle the system is in.
            </summary>
            <param name="showForm">Indicates if an ORCA form should be displayed to the user</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.Dispose">
            <summary>
            Public disposal function
            </summary>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedTDHandler">
            <summary>
            Event handler for a host application to subscribe for new time domain data events
            </summary>
            <description>
            Whenever a time-domain data packet is received by the Summit API, the API will push the received data to any delegate function subscribed to this event handler. 
            Time domain packets will only be sent from the INS to the host computer if time domain data sensing is properly configured and time domain data streaming is enabled.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedFFTHandler">
            <summary>
            Event handler for a host application to subscribe for new FFT data events
            </summary>
            <description>
            Whenever a FFT data packet is received by the Summit API, the API will push the received data to any delegate function subscribed to this event handler. 
            FFT domain packets will only be sent from the INS to the host computer if time domain data sensing is properly configured, the FFT is properly configured, and FFT data streaming is enabled.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedPowerHandler">
            <summary>
            Event handler for a host application to subscribe for new power domain data events
            </summary>
            <description>
            Whenever a band power data packet is received by the Summit API, the API will push the received data to any delegate function subscribed to this event handler. 
            Band power packets will only be sent from the INS to the host computer if time domain, FFT, and power data sensing are properly configured and band power data streaming is enabled.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedAccelHandler">
            <summary>
            Event handler for a host application to subscribe for new accelerometer data
            </summary>
            <description>
            Whenever an accelerometer data packet is received by the Summit API, the API will push the received data to any delegate function subscribed to this event handler. 
            Accelerometer packets will only be sent from the INS to the host computer if accelerometer sensing is properly configured and accelerometer streaming is enabled.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedDetectorHandler">
            <summary>
            Event handler for a host application to subscribe for new detector/embedded stim updates
            </summary>
            <description>
            Whenever a LD detector packet is received by the Summit API, the API will push the received data to any delegate function subscribed to this event handler. 
            LD detector will only be sent from the INS to the host computer if time domain, FFT, power, and LD components are properly configured and detector or adaptive state streaming are enabled.
            If using the detector streaming, then a packet will be received every time the LD updates, which is a interger multiple of the FFT update rate.
            If using the adaptive state streaming, then a packet will only be sent when the detector changes its output.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedLoopRecordUpdateHandler">
            <summary>
            Event handler for a host application to subscribe for new loop record updates
            </summary>
            <description>
            Whenever a loop record status packet is received by the Summit API, the API will push the received status to any delegate function subscribed to this event handler. 
            Loop record packets will only be sent from the INS to the host computer if time domain sensing is properly configured with loop recording enabled and loop recording status streaming is enabled.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.DataReceivedMarkerEchoHandler">
            <summary>
            Event handler for a host application to subscribe for marker echos received from device
            </summary>
            <description>
            Whenever an external marker is sent to the device using the FlashLogExternalEventOnIns function, it echoes the packet back to the host computer. 
            When the echo is received by the Summit API, the API will push the received data to any delegate function subscribed to this event handler. 
            External marker packets will only be sent from the INS to the host computer if marker streaming is enabled.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.UnexpectedLinkStatusHandler">
            <summary>
            Event handler for a host application to subscribe for link status error events received from device.
            </summary>
            <description>
            Whenever a packet is received that indicates that there are link errors, this event will inform the host application. It is up to the host application to determine an appropriate response.
            There are two link status errors that call this handler are power on reset (POR) and therapy out of range (OOR). 
            POR indicates that the device has recovered from an unexpected shutdown. POR events require the flag to be cleared and a battery check before therapy can be enabled.
            OOR events indicate that the device cannot deliver the current specified at the current battery charge. Either recharge device or lower the charge delivered.
            </description>
        </member>
        <member name="E:Medtronic.SummitAPI.Classes.SummitSystem.UnexpectedCtmDisconnectHandler">
            <summary>
            Event handler for a host application to subscribe for notifications of unexpected CTM disconnections.
            </summary>
            <description>
            At some point during a session, the CTM may unexpectedly disconnect due to a variety of issues: Bluetooth drivers, CTM running out of power, or the CTM may move out of range. 
            In this scenario the API will attempt to do an automatic recovery and reestablish communication with the same CTM and INS as before. 
            During this time any call to the API will receive errors that indicate either that no CTM or no INS is connected depending on where in the recovery process the API is in.
            If recovery fails, an isDisposed error will be returned from API calls. If recovery succeeds then the API will function normally. See the SummitManagerHistoryFile.txt log for details on why recovery failed.
            At any point during the recovery process, the application can dispose of the SummitSystem object itself, which will quickly end the recovery process.
            </description>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.SummitSystem.DeviceID">
            <summary>
            Returns the device serial number/ID of the currently connected device
            </summary>
            <description>
            This value is kept in state memory in case the CTM unexpectedly disconnects. During an automatic reconnection attempt, if the INS that the CTM connects to does not have the same ID, then reconnection fails.
            </description>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.SummitSystem.OlympusLatency">
            <summary>
            Returns the last measured delay between the Olympus clock and the PC clock
            </summary>
            <description>
            This contains the last CalculateLatency result. A CalculateLatency test is performed at the beginning of every session with 10 packets.
            This value is kept as state memory to estimate the packet generation times on the INS of streaming data. The time estimates are then returned to the user in the PC clock domain.
            </description>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.SummitSystem.IsDisposed">
            <summary>
            Returns if this object has been disposed or not.
            </summary>
            <description>
            Do not use a disposed Olympus object. Once it's disposed, create a new Summit System using the SummitManager.
            </description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadFirmwareID(Medtronic.NeuroStim.Olympus.DataTypes.Core.FirmwareId@)">
            <summary>
            Returns the fimware versioning information to the host application
            </summary>
            <param name="theFirmwareId">Output buffer that will be written with the INS firmware information. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>This command returns information about the connected INS app firmware version, core firmware version, and configuration version. Primarily useful for version tracking.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadGeneralInfo(Medtronic.NeuroStim.Olympus.DataTypes.DeviceManagement.GeneralInterrogateData@)">
            <summary>
            Returns the device's general info to the host application, includes serial number, battery status, therapy state, others.
            </summary>
            <param name="theGeneralData">Output buffer that will be written with the INS general information. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>This command returns the basic information about the current device status. Includes the devices's serial number, battery status, therapy availability, implant time, and error flags.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadOorInfo(Medtronic.NeuroStim.Olympus.DataTypes.DeviceManagement.OorInterrogateData@)">
            <summary>
            Returns the device's therapy Out-of-Regulation info to the host application
            </summary>
            <param name="theOorData">Output buffer that will be written with the INS stimulation regulation status. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>This command returns information about the device's out-of-regulation(OOR) status for the stimulation engine. OOR may occur if the device is unable to deliver the requested stimulation waveform due to low power or high impedance issues.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadDeviceConfig(System.Collections.Generic.List{Medtronic.NeuroStim.Olympus.DataTypes.Core.ConfigFileEntry}@)">
            <summary>
            Reads the Olympus RC+S factory-set device configuration file from the INS
            </summary>
            <param name="theConfigEntries">Output buffer that will be written with the INS manufacturing configured and calibrated parameters. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>This command returns information about the device's factory configuration. This includes calibrated trims for sensing components, trippoints for low-battery sensing, among others.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadBatteryLevel(Medtronic.NeuroStim.Olympus.DataTypes.PowerManagement.BatteryStatusResult@)">
            <summary>
            Returns the implanted battery state to the host application
            </summary>
            <param name="theBatteryStatus">Output buffer that will be written with the current battery status of the INS. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>This command returns the current status of the INS battery. Fields include the current charge percentage, voltage, and state of charge. When clearing a POR error, a battery check must be peformed before therapy is made available.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadTelemetryModuleInfo(Medtronic.SummitAPI.Classes.TelemetryModuleInfo@)">
            <summary>
            Returns all known information about the telemetry instrument used with this SummitSystem
            </summary>
            <param name="theTelemetryInfo">Output buffer that will be written with the information about the CTM being used to communicate to the INS. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
            <description>This command returns the current information about the CTM module used to connect the API to the Olympus RC+S. This includes the CTM's battery level, firmware, mode, ratio, and connection type.</description>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadDeviceTimestamp(Medtronic.NeuroStim.Olympus.DataTypes.Core.TimeOfDay@)">
            <summary>
            Gets the device's configured time in seconds from March 1, 2000
            </summary>
            <param name="theInsTimeOfDay">Output buffer that will be written with the device's configured time, use ConvertMedtronicEpoch() to convert to a C# datetime object. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteDeviceTimestamp(Medtronic.NeuroStim.Olympus.DataTypes.Core.TimeOfDay)">
            <summary>
            Resets the INS clock to a new value, updates every second thereafer.
            </summary>
            <param name="MedtronicEpochTimestamp">New time for the INS to use in Medtronic Epoch, will be incremented every second</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ResetErrorFlags(Medtronic.NeuroStim.Olympus.DataTypes.Core.StatusBits)">
            <summary>
            Resets a set or subset of status error flags on the device.
            POR flags stop the therapy from being turned on. If you need to clear a POR flag, you must first do so with this function before performing a battery measurement with SummitSystem.ReadBatteryLevel.
            </summary>
            <param name="Flags">Enumerable describing a all possible flags to reset.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ResetOvervoltageStatus">
            <summary>
            Resets the battery overvoltage flag in the link status byte, resulted from overcharging via PTM/RTM
            </summary>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteTelemetryParameters(System.UInt16,System.Byte)">
            <summary>
            Changes the telemetry protocol ratio and mode parameters
            </summary>
            <param name="theMode">New mode to apply, can be either 3 or 4. If an invalid parameter is passed, then the value is defaulted to 3.</param>
            <param name="theRatio">The telemetry uplink/downlink ratio to use between CTM and INS. If number higher than 32 is passed, value is defaulted to 32</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadSensingState(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SensingState@)">
            <summary>
            Access the sensing state of the Olympus RC+S
            </summary>
            <param name="theSensingState">Output buffer that will be written with current sensing state of the INS. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadSensingSettings(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SensingConfiguration@)">
            <summary>
            Access the sensing configuration of the Olympus RC+S
            </summary>
            <param name="theSensingConfig">Output buffer that will be written with the full INS sensing configuraiton excluding the accelerometer. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingState(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SenseStates,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SenseTimeDomainChannel)">
            <summary>
            Configures the INS to enable or disable specific sensing components.
            </summary>
            <param name="theNewSensingState">Flag parameter that indicates which sensors need to be enabled</param>
            <param name="theFftstreamChannel">byte indicating which FFT should be streamed if FFT streaming is enabled.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingTimeDomainChannels(System.Collections.Generic.List{Medtronic.NeuroStim.Olympus.DataTypes.Sensing.TimeDomainChannel})">
            <summary>
            Configures the INS time domain sensing by means of a list of time domain channel objects. Time domain channel list must contain four non-null elements.
            </summary>
            <param name="channels">Contains an list of time-domain channel configurations, must be of length 4</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingTimeDomainChannels(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.TimeDomainChannel,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.TimeDomainChannel,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.TimeDomainChannel,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.TimeDomainChannel)">
            <summary>
            Configures the INS time domain sensing using four seperate TimeDomainChannel objects. Will reject if any are null.
            </summary>
            <param name="channel0">time-domain channel configuration for channel 0</param>
            <param name="channel1">time-domain channel configuration for channel 1</param>
            <param name="channel2">time-domain channel configuration for channel 2</param>
            <param name="channel3">time-domain channel configuration for channel 3</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingPowerChannels(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.BandEnables,System.Collections.Generic.List{Medtronic.NeuroStim.Olympus.DataTypes.Sensing.PowerChannel})">
            <summary>
            Configures the INS power channel settings by means of a list of power channel objects. Power channel list must contain four non-null elements.
            </summary>
            <param name="enables">indicate which bands need to be enabled for the power channels</param>
            <param name="channels">a list of PowerChannel objects that describe how each power channel needs to be configured, must be length 4</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingPowerChannels(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.BandEnables,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.PowerChannel,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.PowerChannel,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.PowerChannel,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.PowerChannel)">
            <summary>
            Configures the INS power channel settings by means of four seperate power channel objects. All must be not null. 
            </summary>
            <param name="enables">indicate which bands need to be enabled for the power channels</param>
            <param name="channel0">Power channel configuration for channel 0</param>
            <param name="channel1">Power channel configuration for channel 1</param>
            <param name="channel2">Power channel configuration for channel 2</param>
            <param name="channel3">Power channel configuration for channel 3</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingFftSettings(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.FftConfiguration)">
            <summary>
            Configures the INS FFT settings by making using of the FftConfiguration object.
            </summary>
            <param name="fftConfig">Object containing the configuration of the on-board FFT module. See FftConfiguration documentation for more details.
            Note: When the FFT size is 1024, the interval cannot be less than 100ms.
            Note: When the FFT size is 64, the only acceptable window is 100% Hann.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingAccelSettings(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.AccelSampleRate)">
            <summary>
            Configures the INS Accelerometer sampling rate settings
            </summary>
            <param name="theSampleRate">Enumeration containing possible accelerometer configurations</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteSensingMiscSettings(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.MiscellaneousSensing)">
            <summary>
            Configures the miscellaneous sensing parameters. Includes bridging parameters, loop record configuration, and stream packet timing.
            </summary>
            <param name="miscSettings">See documentation for description of the miscellaneous parameters.
            Note: if using bridging functionality then overridden sensing channel must have it's inputs set to floating</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadAdaptiveDetectionSettings(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.DetectionConfiguration@)">
            <summary>
            Reads the LFP feature detector settings for embedded adaptive stim
            </summary>
            <param name="theDetectionConfigs">Output buffer that will be written with the configuraitons for the two LFO feature detectors. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadAdaptiveStimSettings(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveSettings@)">
            <summary>
            Reads the adaptive stimulation controller settings for embedded closed-loop using the LFP feature detector
            </summary>
            <param name="theAdaptiveSettings">Output buffer that will be written with the adaptive stimulation control policy currently configured on the INS. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.AdaptiveSettingsInfCheck(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveSettings)">
            <summary>
            Checks if an "Inf" string will be serialized from the Adaptive state settings, corrects to "NaN" which is JSON compliant
            </summary>
            <param name="inputAdaptiveSettings">The input adaptive settings with "Inf" values</param>
            <returns>The output adaptive settings without "Inf" values</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadAdaptiveDetectionStatus(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.Packets.DetectionAdaptivePacket@)">
            <summary>
            Asychronously reads back the detector and adaptive stimulation status independant of stream timing.
            </summary>
            <param name="theAdaptiveStatus">Output buffer that will be written with the current state of the embedded adaptive controllers and detectors. Null if an error occurs.s</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteAdaptiveDetectionParameters(System.Byte,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.LinearDiscriminantConfiguration)">
            <summary>
            Writes the LFP detector parameters
            </summary>
            <param name="detectorNumber">Which detector to apply the parameters to, either 0 or 1</param>
            <param name="theDetectorConfig">The object containing the desired LFP detector settings</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteAdaptiveMode(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveTherapyModes)">
            <summary>
            Writes the adaptive stimulation mode to the device, either enabling or disabling embedded adaptive stim
            </summary>
            <param name="theAdaptiveMode">The mode to apply to the device</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthWriteAdaptiveDeltaLimits(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveDeltas[])">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Writes the limits for the adaptive stimulation amplitude ramping rates (deltas)
            </summary>
            <param name="theAdaptiveDeltaLimits">Array of length 8 that contains rise and fall ramping rate limits in steps per update
            First element is first programs rise steps, second is first program's fall steps, etc for other programs</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteAdaptiveDeltas(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveDeltas[])">
            <summary>
            Writes the desired rate of change between adaptive state amplitude setpoints (deltas)
            </summary>
            <param name="theAdaptiveDeltas">Array of length 4 that contains the desired rise and fall ramping rate in steps per update
            First element is first programs rise steps, second is first program's fall steps, etc for other programs</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteAdaptiveState(System.Byte,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveState,System.Boolean)">
            <summary>
            Writes a state-table entry for embedded adaptive stimulation algorithm
            </summary>
            <param name="stateNum">The state to write to</param>
            <param name="theAdaptiveState">The state-table entry with designated parameter setpoints</param>
            <param name="enforceSenseFriendly"></param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteAdaptiveGoToState(System.Byte)">
            <summary>
            Ignores the detector and forces the adaptive stimulation table into a specific state, only usable in the "Operative" adaptive mode
            </summary>
            <param name="stateNum">State to transition to</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.WriteAdaptiveClearSettings(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.Adaptive.AdaptiveClearTypes,System.Byte)">
            <summary>
            Clears indicated adaptive stimulation settings, either the full table or an individual entry.
            </summary>
            <param name="clearType">Enumerable-based definition of different types of clear that can be applied</param>
            <param name="clearState">The state to apply the clear to if applicable, should be between 0-8</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.DetectorTestOverridePowerChannels(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.DetectionInputs,System.UInt32[])">
            <summary>
            Overrides the detector's power inputs in order to test the current LD configuration behavior
            </summary>
            <param name="overrideChannels">Indicate which channels to override</param>
            <param name="overrideValues">An array of eight elements to use for override, index corresponds to each override channel in order of DetectionInputs enumeration</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadStimGroup(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.TherapyGroup@)">
            <summary>
            Read the therapy configuration of every group at once
            </summary>
            <param name="groupIndex">Indicates which group to read from the INS</param>
            <param name="theTherapyGroup">Output buffer that will be written with the therapy group read from the INS. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.ReadStimAmplitudeLimits(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.AmplitudeLimits@)">
            <summary>
            Reads a therapy group's programmed stimulation limits
            </summary>
            <param name="groupIndex">Indicates which group to read from the INS</param>
            <param name="theAmplitudeLimits">Output buffer that will be written with the amplitude limits for the selected therapy group from the device. Null if an error occurs.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StimChangeTherapyOn">
            <summary>
            Turns on the stimulation engine, required for any therapy to be output to patient
            </summary>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StimChangeTherapyOff(System.Boolean)">
            <summary>
            Turns the stimulation engine off, required to stop therapy output to patient
            </summary>
            <param name="withRamp">Inidicates if soft start parameters should be used to ramp down stim if true, or if should just jump to off if false</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StimChangeActiveGroup(Medtronic.NeuroStim.Olympus.DataTypes.DeviceManagement.ActiveGroup)">
            <summary>
            Change the active group to a different one specified by the function argument
            Note: Performs a read therapy group function before the switch to ensure the new group has valid settings. If the read therapy group function fails you will get an APIReturnInfo that indicates as such.
            </summary>
            <param name="newGroupNum">The new stimulation group to activate</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StimChangeStepAmp(System.Byte,System.Double,System.Nullable{System.Double}@)">
            <summary>
            Modify a program's amplitude in the active group
            </summary>
            <param name="programNumber">The program to apply the amplitude change to</param>
            <param name="ampDeltaMilliamps">The change in amplitude to apply in milliamps, 0.1 resolution</param>
            <param name="newStimAmplitude">Output buffer that will be written with the new stimulation amplitude in milliamps. Null if a critical error occurs or if an invalid parameter was sent.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StimChangeStepPW(System.Byte,System.Int32,System.Nullable{System.Int32}@)">
            <summary>
            Modify a program's pulsewidth in the active group.
            </summary>
            <param name="programNumber">The program to apply the pulse width change to</param>
            <param name="pwDeltaMicroseconds">the change in pulsewidth to apply in microseconds, 10microsecond resolution</param>
            <param name="newStimPulseWidth">Output buffer that will be written with the new stimulation pulse width in microseconds. Null if a critical error occurs or if an invalid parameter was sent.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.StimChangeStepFrequency(System.Double,System.Boolean,System.Nullable{System.Double}@)">
            <summary>
            Modify the active group's stimulation period. Sense friendly rates can be accessed programmatically by using the SenseFriendlyClockingLookup object. 
            If a host application increments or decrements to a rate that is on the table, the sense friendly rate will be configured.
            If enforce sense friendly is true, then the API will check if the current frequency plus the delta is sense friendly. If not, it will then reduce the delta magnitude until the first sense friendly rate is found.
            If there is no sense friendly rate between the current stimulation frequency and the delta, then a APIRejectCodes.NoValidSenseFriendlyRate is returned to the host application.
            </summary>
            <param name="freqDelta">The change in stimulation period to apply, resolution is in 0.1 Hz</param>
            <param name="enforceSenseFriendly">Boolean indicating if a sensing friendly rate should be enforced or not</param>
            <param name="newStimFrequency">Output buffer that will be written with the new stimulation frequency in Hz, 0.1Hz resolution. Null if a critical error occurs or if an invalid parameter was sent.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.TherapyCheckpointRestore">
            <summary>
            Restores the last therapy checkpoint, set by the Research Lab Programmer (RLP)
            </summary>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimWriteGroup(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.TherapyGroup)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the group as a whole with an entire therapyDevice object
            </summary>
            <param name="groupIndex">The group to modify</param>
            <param name="stimGroup">The group information to apply</param>
            <returns>Returned structure indicating if the command was successful or not. [0] is for Group Update, [1] is for chop clock update, [2] is ReadStimGroup</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimWriteProgram(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,System.Byte,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.TherapyProgram)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify a group's program as a whole
            </summary>
            <param name="groupIndex">Indicates the group that the program belongs to</param>
            <param name="programIndex">Indicates the program to modify</param>
            <param name="stimProgram">The class object that contains the program's configuration to apply</param>
            <returns>Returned structure indicating if the command was successful or not. [0] is for WriteSlotParameters, [1] is for WriteVersionParameters, [2] is ReadStimGroup</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyClearGroup(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Clears all programs for a given group
            </summary>
            <param name="groupIndex">Indicates which group configuration to clear</param>
            <returns>List with return info for used commands,[0] is for clear group, [1] is for updating the internal state with a ReadStimGroup function</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyClearProgram(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,System.Byte)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Clear the configuration for a specific program
            </summary>
            <param name="groupIndex">Indicates which group the program belongs to that should be cleared</param>
            <param name="programIndex">Indicates which program to clear of the specified group</param>
            <returns>Returned structure indicating if the command was successful or not. [0] for clear program, [1] for clear version, [2] is ReadStimGroup</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyElectrodes(System.Byte,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.TherapyElectrodes)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the stimulation electrodes to use for a given slot in the active program
            </summary>
            <param name="programIndex">Which program to apply the change to</param>
            <param name="electrodes">The new electrode configuration to apply</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyRateLimits(System.UInt16,System.UInt16)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modifies the active group's stimulation frequency limits for patient safety
            </summary>
            <param name="ratePeriodLowerLimit">The lower limit to apply to the active group</param>
            <param name="ratePeriodUpperLimit">The upper limit to apply to the active group</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyPulseWidthLimits(System.Byte,System.Byte)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the pulse width limits for the active group
            *This will eventually be program specific
            </summary>
            <param name="pulseWidthLowerLimit">New pulse width lower limit for the active group</param>
            <param name="pulseWidthUpperLimit">New pulse width upper limit for the active group</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimWriteAmplitudeLimits(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,System.Byte,System.Byte,System.Byte)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the amplitude limits for the active group
            *This will eventually be program specific
            </summary>
            <param name="amplitudeLowerLimit">New amplitude lower limit</param>
            <param name="amplitudeUpperLimit">New amplitude upper limit</param>
            <param name="theGroup">The group with the program to apply the limits to</param>
            <param name="theProgram">The program to apply these limits to</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyRate(System.UInt16)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Jumps the group's rate to the specified value
            </summary>
            <param name="ratePeriod">The new rate to apply to the active group</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyPulseWidth(System.Byte,System.Byte)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Jumps a program's pulse width to a specified value
            </summary>
            <param name="programIndex">The program to modify</param>
            <param name="pulseWidth">The new pulse width to apply</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyAmplitude(System.Byte,System.Byte)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Jumps a program's amplitude to a specified value
            </summary>
            <param name="programIndex">The program to modify</param>
            <param name="amplitude">The new amplitude to apply</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyGroupCyclingEnable(System.Boolean)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Enable or disable cycling for the active group
            </summary>
            <param name="cyclingEnabled">The boolean value to apply to the active group's cycling configuration</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyProgramCyclingEnable(System.Byte,System.Boolean)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Enable or disable cycling for the active group
            </summary>
            <param name="cyclingEnabled">The boolean value to apply to the active group's cycling configuration</param>
            <param name="theProgram">The program to apply the cycling enabled field to</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyCyclingTimes(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.CycleTimeShort,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.CycleTimeShort)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the active group's cycling configuraton
            </summary>
            <param name="cycleOnTime">The specified cycling on-time to apply to the active group</param>
            <param name="cycleOffTime">The specified cycling off-time to apply to the active group</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifySoftStartStopSettings(System.Byte,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.RampingTypes)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Change the soft start and stop settings for the active group
            </summary>
            <param name="rampTime">The new ramp time parameter to apply to the active group</param>
            <param name="rampRepeat">The new ramp-repeat parameter to apply to the active group</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyProgramEnables(System.Byte,System.Boolean)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the program enabled settings for the active group
            </summary>
            <param name="enable">The new enable to apply to the active group's program defined by programNum</param>
            <param name="programNum">The program in the active group to apply the new enable value to</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStimModifyActiveRecharge(Medtronic.NeuroStim.Olympus.DataTypes.Therapy.GroupNumber,Medtronic.NeuroStim.Olympus.DataTypes.Therapy.ActiveRechargeRatios[])">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Modify the active recharge settings for a group's programs
            </summary>
            <param name="groupIndex">The group to modify the active recharge settings for</param>
            <param name="programRatios">The new program ratios for the specified group</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthTherapyCheckpointSave(System.Boolean)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Saves the current therapy settings as a checkpoint that can be restored later
            </summary>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthWriteSensingBlankingConfig(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SensingBlankingConfiguration)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Configures the sensing blanking period after a stimulation pulse to lessen stimulation artifact
            </summary>
            <param name="newBlankingConfig"></param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashWriteBlock(Medtronic.SummitAPI.Flash.FlashBlockOffset,System.Collections.Generic.List{System.Byte})">
            <summary>
            Writes a block of 32K Flash Memory, authenticated action only
            </summary>
            <param name="memOffset">The offset in bytes within the 32K flash memory for the block you want to write</param>
            <param name="writeData">The 256 byte-long array of data to write in the block</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashCalculateCRC(System.UInt16,System.UInt16,System.Nullable{System.UInt16}@)">
            <summary>
            Calculates the CRC on a block of 32K Flash Memory
            </summary>
            <param name="startOffset">Offset in the flash memory to begin CRC check</param>
            <param name="numBytes">The number of bytes to include in the CRC check</param>
            <param name="theCRC">Output buffer that will be written with the CRC of the data in flash within the memory space requested. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashReadFromAddress(Medtronic.SummitAPI.Flash.FlashBlockOffset,System.UInt16,System.Collections.Generic.List{System.Byte}@)">
            <summary>
            Reads a number of bytes from the 32K on-board flash
            </summary>
            <param name="numBytes">The number of bytes to read from the on-board flash memory location</param>
            <param name="memOffset">The offset of the bytes to read from the on-board flash memory</param>
            <param name="readBytes">Output buffer that will be written with the requested bytes read from flash. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashReadFromAddress(System.UInt16,System.UInt16,System.Collections.Generic.List{System.Byte}@)">
            <summary>
            Reads a number of bytes from the 32K on-board flash
            </summary>
            <param name="memOffset">The number of bytes to read from the on-board flash memory location</param>
            <param name="numBytes">The offset of the bytes to read from the on-board flash memory</param>
            <param name="readBytes">Output buffer that will be written with the requested bytes read from the INS flash</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashReadSubjectInfo(Medtronic.SummitAPI.Flash.SubjectInfo@)">
            <summary>
            Retrieves the subject information stored in the INS 32K flash configured by the RLP
            </summary>
            <param name="theSubjectInfo">Output buffer that will be written with the subject information read from flash. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthWriteSubjectInfo(Medtronic.SummitAPI.Flash.SubjectInfo)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Writes RLP-entered subject information into the 32K flash
            </summary>
            <param name="theSubject">Subject info to store in the 32K Flash, this function calls UpdateCRC on the structure before writing it down.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashReadFormatHeader(Medtronic.SummitAPI.Flash.FlashFormatHeader@)">
            <summary>
            Retrieves the authenticated block format header stored in the INS 32K flash configured by the RLP
            </summary>
            <param name="theFlashFormatHeader">Output buffer that will be written with the flash header information read from flash. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthWriteFlashFormatHeader(Medtronic.SummitAPI.Flash.FlashFormatHeader)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Writes the RLP generated authenticated block format header into the 32K flash
            </summary>
            <param name="theFlashFormatHeader">The flash format header information</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashReadLastPtmRtmInfo(Medtronic.SummitAPI.Flash.LastPtmRtmInfo@)">
            <summary>
            Retrieves the serial numbers and software version numbers for the last PTM and RTM that connected to the INS.
            </summary>
            <param name="thePtmRtmInfo">Output buffer that will be written with the information about the last RTM and PTM that communicated with this INS. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthResetMirror(Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashMirrorTypes)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Resets and re-initialize a selected flash mirror
            </summary>
            <param name="selectedMirror">Enumerable indicating possible mirrors to reset</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashReadMirror(Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashMirrorTypes,Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashMirrorData@)">
            <summary>
            Reads information from a selected flash mirror. Not useful for RDK but is safe so no authentication required
            </summary>
            <param name="selectedMirror">Enumerable indicating possible mirrors to read information from</param>
            <param name="theFlashMirror">Output buffer that will be written with the flash mirror data retrieved from the INS. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.FlashGetMirrorInfo(Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashMirrorTypes,Medtronic.NeuroStim.Olympus.DataTypes.Core.DataManagement.FlashMirrorInfo@)">
            <summary>
            Request the Flash Mirror information from the INS. Not useful for RDK but is safe so no authentication required
            </summary>
            <param name="selectedMirror">Enumerable indicating possible mirrors to request information for</param>
            <param name="theFlashMirrorInfo">Output buffer that will be written with the information for the flash mirror retrieved from the INS. Null if an error occured.</param>
            <returns>Returned structure indicating if the command was successful and relevant error conditions</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthSetImplantDate(Medtronic.NeuroStim.Olympus.DataTypes.Core.TimeOfDay)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Sets the implant date on the INS
            </summary>
            <param name="theNewImplantDate"></param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStartClinicianSession(System.Byte)">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Starts a clinician session with the INS
            </summary>
            <param name="minutes">number of minutes session will be active</param>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthStopClinicianSession">
            <summary>
            Authenticated function, will not be available anywhere but the RLP.
            Ends a clinician session with the INS
            </summary>
            <returns>Returned structure indicating if the command was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitSystem.zAuthManageEriEos(System.Boolean,System.Boolean,System.UInt16)">
            <summary>
            Authenticated function, allows the modification of the elective replacement indicator, the end-of-service flag, and the days since implant.
            </summary>
            <param name="newEriStatus">Boolean flag indicating the elective replacement indicator status</param>
            <param name="newEosStatus">Boolean flag indicating the end-of-service flag status</param>
            <param name="newDaysSinceImplant">The new number of days that should be written into the device to track the number of days since implant.</param>
            <returns></returns>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.TelemetryModuleInfo">
            <summary>
            Contains all information about the Summit's Telemetry
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.IsConnected">
            <summary>
            Boolean indicates if the telemetry is currently connected to or not.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.ModuleType">
            <summary>
            Indicates the type of device that is connected to, for Summit it will always be "CTM2"
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.WireType">
            <summary>
            Indicates the type of connection to the telemetry, may be wired or wireless.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.SerialNumber">
            <summary>
            Indicates the serial number of the connected telemetry, device type dependant
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.FirmwareVersion">
            <summary>
            Indicates the firmware version running on the connected telemetry
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.BatteryLevel">
            <summary>
            If there is a battery for the connected telemetry, this indicates how fully charged it is on a percentage scale (100-0%)
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.BatteryStatus">
            <summary>
            String indicating the overall status of the battery in the telemetry if it exists
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.TelmMode">
            <summary>
            Enumeration indicating which telemetry mode is being used to communicate between the INS and the CTM
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.TelmRatio">
            <summary>
            The uplink/Downlink ratio between INS and CTM, indicates balance between command responsiveness and sensed packet bandwidth
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.PhysicalLayer">
            <summary>
            Low-level physical layer between computer and CTM.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.TelemetryModuleInfo.#ctor(Medtronic.TelemetryM.IInstrument,Medtronic.TelemetryM.TelemetryProtocols,System.Byte,Medtronic.TelemetryM.InstrumentPhysicalLayers,Medtronic.TelemetryM.CtmProtocol.Commands.GetVersions,Medtronic.TelemetryM.CtmProtocol.Commands.GetStatus)">
            <summary>
            Constructor for the TelemetryInfo class, contains all relevent info about the SummitSystem's telemetry
            </summary>
            <param name="aDevice">Interface object desribing the telemetry module</param>
            <param name="aTelemetryMode">The telemetry mode to use between CTM and INS</param>
            <param name="aRatio">The telemetry uplink/downlink ratio to use between CTM and INS</param>
            <param name="aPhysicalLayer">Indicates which physical communication channel to use to connect to the telemetry</param>
            <param name="theStatusCmd">The CTM status retrieved from the device</param>
            <param name="theVersionsCmd">The CTM version retrieved from the device</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.TimesyncTimestamp">
            <summary>
            Internal class used to log out timesync unrequested packets from the INS when time streaming is on
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TimesyncTimestamp.InsTimeStamp">
            <summary>
            The latest timestamp reported by the INS
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TimesyncTimestamp.InsSystemTick">
            <summary>
            The latest system tick reported by the INS
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TimesyncTimestamp.LatencyMilliseconds">
            <summary>
            Most recent latency measurement results performed by the API
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.TimesyncTimestamp.TheRxTime">
            <summary>
            The time the communication platform reported that it received the packet.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.TimesyncTimestamp.#ctor(System.UInt32,System.UInt16,System.TimeSpan,System.DateTime)">
            <summary>
            Constructor for the TimesyncTimestamp class used for time-sychronization functionality
            </summary>
            <param name="timestamp">The latest timestamp reported by the INS</param>
            <param name="systemTick">The latest system tick reported by the INS</param>
            <param name="lastLatencyResult">Most recent latency measurement results performed by the API</param>
            <param name="rxTime">The time the communication platform reported that it received the packet.</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.OrcaManager">
            <summary>
            Internal class for managing ORCA session registration and determining log location in filesystem.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheProjectID">
            <summary>
            Returns the project ID registerd to ORCA through this Orca Manager instance
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheSessionID">
            <summary>
            Returns the unique ORCA session ID string
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheOrcaBase">
            <summary>
            Returns the system path to the directory where the top level projects are stored
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheSessionDirectory">
            <summary>
            Returns the system path to the directory where session-scope information should be stored
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheDeviceDirectory">
            <summary>
            Returns the system path to the directory where device-scope information should be stored
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheProjectDirectory">
            <summary>
            Returns the system path to the directory where project-scope information should be stored
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheAnnotationOwner">
            <summary>
            Returns if this ORCA Manager instance is responsible for annotations
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.OrcaManager.TheAnnotationsEnabled">
            <summary>
            Returns if this ORCA Manager instance requested annotations to be enabled
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.#ctor(System.String,System.String,System.String,System.Boolean)">
            <summary>
            Constructs a new ORCA Manager object
            </summary>
            <param name="projectId">The name of the ORCA project we are saving data to, used for data organziation</param>
            <param name="patientId">The unique patient identifier, used for data organziation</param>
            <param name="deviceId">The unique device identifier, used for data organziation</param>
            <param name="enableUi">Enables or disables ORCA annotations from being presented to user</param>
            <exception cref="T:System.Exception">Thrown when Summit keys do not exist or are blank in the ORCA registry location</exception>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.RegisterSession(System.Boolean)">
            <summary>
            Registers the session to the ORCA FileMover session server
            </summary>
            <param name="forceNewSession">Indicates if a new session should be forced (value = true) or if logs should join an open session if possible (value = false)</param>
            <returns>Boolean indicating if registration was successful or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.DeregisterSession">
            <summary>
            Deregisters the ORCA process from the session server, used when logging is complete
            </summary>
            <returns>Boolean indicating successful deregistration</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.OpenSessionUI(System.String)">
            <summary>
            Open the Orca annotation tool with specific editable fields, calls internal private function
            </summary>
            <param name="editableFields">The subform or subfields to display</param>
            <returns>Integer error code, 1 indicates completed required annotations, 0 incomplete required annotations, -1 indicates this SummitSystem is not the annotation owner, -2 indicates user requested no annotations</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.OpenSessionUI(System.String,System.String)">
            <summary>
            Open the Orca annotation tool with an arbitrary form path and specific editable fields, calls internal private function
            </summary>
            <param name="appliedForm">The form to apply</param>
            <param name="editableFields">The subform or subfields to display</param>
            <returns>Integer error code, 1 indicates completed required annotations, 0 incomplete required annotations, -1 indicates this SummitSystem is not the annotation owner, -2 indicates user requested no annotations</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.safelyCloseSocket(System.Net.Sockets.Socket)">
            <summary>
            Safely closes the socket to the FileMover Session Server
            </summary>
            <param name="socket">Socket to close while catching all exceptions, no actions taken on exception</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.getSocketToServer">
            <summary>
            Creates the socket to the FileMover Session Server
            </summary>
            <returns>Returns the socket to the server connection</returns>
            <exception cref="T:System.Exception">Throws exception when the function fails to connect to the FileMover socket</exception>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.checkOrcaService">
            <summary>
            Checks if the ORCA service is running or not. If not it attempts to start the service
            </summary>
            <returns>Boolean indicating if the service is running or not</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.createSession">
            <summary>
            Creats a session by checking that project and patient scope annotations exist
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.openUI(System.String,System.String,System.String)">
            <summary>
            This function opens the annotator UI with defined form and fields
            </summary>
            <param name="path">Path of the file being annotated with the ORCA form</param>
            <param name="appliedForm">Path to the form to show the user</param>
            <param name="editableFields">Which subfield or subform that should be displayed to user</param>
            <returns>Integer error code, 1 indicates completed required annotations, 0 incomplete required annotations</returns>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo">
            <summary>
            Contains all of the ORCA related session information, private to the ORCA Manager
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.ProjectID">
            <summary>
            Project ID for the session, determined by host application
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.PatientID">
            <summary>
            Patient ID for the session, pulled from INS
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.DeviceID">
            <summary>
            Device ID or serial number for the session, pulled from INS
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.SessionID">
            <summary>
            Unique session ID number, determined by SummitAPI
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.SessionDirectory">
            <summary>
            Root session logging directory, determined by PC registry and project/patient/session/device info
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.FormPath">
            <summary>
            Path to ORCA forms, pulled from PC registry
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.AnnotationOwner">
            <summary>
            Boolean indicating if this instance is reesponsible for pushing forms to users, assigned by ORCA FileMover service
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.AnnotationsEnabled">
            <summary>
            Boolean indicating if annotations are enforced, determined by either PC registry, INS, or host applicatioin.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.OrcaManager.SessionInfo.#ctor(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Structure constructor
            </summary>
            <param name="projectID_in">Input project ID</param>
            <param name="patientID_in">Input patient ID</param>
            <param name="deviceID_in">Iput device serial number</param>
            <param name="formPath_in">Input form path</param>
            <param name="annotationsEn">Input annotations enabled flag</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.SenseFriendlyClockingLookup">
            <summary>
            Internal class for creating a lookup table for sensing-friendly stimulation rates
            </summary>
            <description>
            These stimulation rates result in lower stimulation artifact when used compared to a non-sense friendly rate. 
            The sense friendly rates are:
            2 Hz,   
            2.5 Hz,  
            3 Hz,  
            3.5 Hz,  
            4 Hz,  
            4.5 Hz,  
            5 Hz,  
            5.5 Hz,  
            6 Hz,  
            6.5 Hz,  
            7 Hz,  
            7.5 Hz,  
            8 Hz,  
            8.5 Hz,  
            9 Hz,  
            9.5 Hz,  
            10 Hz,  
            10.5 Hz,  
            11 Hz,  
            11.5 Hz,  
            12 Hz,  
            12.5 Hz,  
            13 Hz,  
            13.5 Hz,  
            14 Hz,  
            14.5 Hz,  
            15 Hz,  
            15.5 Hz,  
            16 Hz,  
            16.5 Hz,  
            17 Hz,  
            17.5 Hz,  
            18 Hz,  
            18.5 Hz,  
            19 Hz,  
            19.5 Hz,  
            20 Hz,  
            20.5 Hz,  
            21 Hz,  
            21.5 Hz,  
            22 Hz,  
            22.5 Hz,  
            23 Hz,  
            23.5 Hz,  
            24 Hz,  
            24.5 Hz,  
            25 Hz,  
            25.5 Hz,  
            26 Hz,  
            26.5 Hz,  
            27 Hz,  
            27.5 Hz,  
            28 Hz,  
            28.5 Hz,  
            29 Hz,  
            29.5 Hz,  
            30 Hz,  
            30.5 Hz,  
            31 Hz,  
            31.5 Hz,  
            32 Hz,  
            32.5 Hz,  
            33 Hz,  
            33.5 Hz,  
            34 Hz,  
            34.5 Hz,  
            35 Hz,  
            35.5 Hz,  
            36 Hz,  
            36.5 Hz,  
            37 Hz,  
            37.5 Hz,  
            38 Hz,  
            38.5 Hz,  
            39 Hz,  
            39.5 Hz,  
            40 Hz,  
            40.5 Hz,  
            41 Hz,  
            41.5 Hz,  
            42 Hz,  
            42.5 Hz,  
            43 Hz,  
            43.5 Hz,  
            44 Hz,  
            44.5 Hz,  
            45 Hz,  
            45.5 Hz,  
            46 Hz,  
            46.5 Hz,  
            47 Hz,  
            47.5 Hz,  
            47.9 Hz,  
            48.5 Hz,  
            49 Hz,  
            49.5 Hz,  
            50 Hz,  
            50.5 Hz,  
            51 Hz,  
            51.5 Hz,  
            52.1 Hz,  
            52.5 Hz,  
            53 Hz,  
            53.5 Hz,  
            54.1 Hz,  
            54.5 Hz,  
            54.9 Hz,  
            55.6 Hz,  
            56.1 Hz,  
            56.5 Hz,  
            57.1 Hz,  
            57.5 Hz,  
            58.1 Hz,  
            58.5 Hz,  
            59 Hz,  
            59.5 Hz,  
            60 Hz,  
            60.5 Hz,  
            61 Hz,  
            61.6 Hz,  
            62.1 Hz,  
            62.5 Hz,  
            62.9 Hz,  
            63.5 Hz,  
            64.1 Hz,  
            64.5 Hz,  
            64.9 Hz,  
            65.5 Hz,  
            66.1 Hz,  
            66.5 Hz,  
            67.1 Hz,  
            67.6 Hz,  
            68 Hz,  
            68.5 Hz,  
            69 Hz,  
            69.4 Hz,  
            70 Hz,  
            70.4 Hz,  
            71 Hz,  
            71.4 Hz,  
            71.9 Hz,  
            72.5 Hz,  
            73 Hz,  
            73.5 Hz,  
            74 Hz,  
            74.4 Hz,  
            75.1 Hz,  
            75.3 Hz,  
            76 Hz,  
            76.5 Hz,  
            76.9 Hz,  
            77.5 Hz,  
            77.9 Hz,  
            78.5 Hz,  
            79.1 Hz,  
            79.6 Hz,  
            80 Hz,  
            80.6 Hz,  
            80.9 Hz,  
            81.3 Hz,  
            82 Hz,  
            82.5 Hz,  
            83.1 Hz,  
            83.3 Hz,  
            84 Hz,  
            84.5 Hz,  
            85 Hz,  
            85.5 Hz,  
            86.1 Hz,  
            86.2 Hz,  
            87 Hz,  
            87.4 Hz,  
            88 Hz,  
            88.5 Hz,  
            89.3 Hz,  
            89.6 Hz,  
            89.9 Hz,  
            90.6 Hz,  
            90.9 Hz,  
            91.6 Hz,  
            91.9 Hz,  
            92.6 Hz,  
            92.8 Hz,  
            93.5 Hz,  
            94 Hz,  
            94.3 Hz,  
            95.2 Hz,  
            95.4 Hz,  
            96.2 Hz,  
            96.5 Hz,  
            97.1 Hz,  
            97.7 Hz,  
            98 Hz,  
            98.4 Hz,  
            99 Hz,  
            99.2 Hz,  
            100 Hz,  
            100.4 Hz,  
            101 Hz,  
            101.6 Hz,  
            102 Hz,  
            102.5 Hz,  
            103.1 Hz,  
            103.5 Hz,  
            104.2 Hz,  
            105 Hz,  
            105.5 Hz,  
            105.9 Hz,  
            106.6 Hz,  
            106.8 Hz,  
            107.5 Hz,  
            108.2 Hz,  
            108.7 Hz,  
            109.6 Hz,  
            109.9 Hz,  
            110.6 Hz,  
            111.1 Hz,  
            111.6 Hz,  
            112.4 Hz,  
            112.6 Hz,  
            113.4 Hz,  
            114.2 Hz,  
            114.7 Hz,  
            114.9 Hz,  
            115.7 Hz,  
            116.3 Hz,  
            117.1 Hz,  
            117.4 Hz,  
            117.9 Hz,  
            119 Hz,  
            120.2 Hz,  
            120.5 Hz,  
            121.1 Hz,  
            121.4 Hz,  
            122 Hz,  
            122.5 Hz,  
            123.2 Hz,  
            123.5 Hz,  
            123.8 Hz,  
            124.4 Hz,  
            125 Hz,  
            125.3 Hz,  
            126.3 Hz,  
            126.6 Hz,  
            127.6 Hz,  
            128.2 Hz,  
            128.9 Hz,  
            129.9 Hz,  
            130.2 Hz,  
            131.6 Hz,  
            132.3 Hz,  
            133 Hz,  
            133.3 Hz,  
            134.4 Hz,  
            135.1 Hz,  
            135.9 Hz,  
            136.6 Hz,  
            137 Hz,  
            137.4 Hz,  
            138.9 Hz,  
            140.1 Hz,  
            140.4 Hz,  
            140.8 Hz,  
            141.2 Hz,  
            142 Hz,  
            142.9 Hz,  
            143.7 Hz,  
            144.9 Hz,  
            145.3 Hz,  
            146.2 Hz,  
            147.1 Hz,  
            148.8 Hz,  
            149.3 Hz,  
            150.6 Hz,  
            151.5 Hz,  
            152 Hz,  
            152.4 Hz,  
            153.8 Hz,  
            154.3 Hz,  
            155.3 Hz,  
            156.3 Hz,  
            157.2 Hz,  
            158.2 Hz,  
            158.7 Hz,  
            160.3 Hz,  
            161.3 Hz,  
            162.3 Hz,  
            163.4 Hz,  
            163.9 Hz,  
            164.5 Hz,  
            166.1 Hz,  
            166.7 Hz,  
            168.9 Hz,  
            169.5 Hz,  
            170.1 Hz,  
            171.2 Hz,  
            172.4 Hz,  
            173.6 Hz,  
            174.2 Hz,  
            175.4 Hz,  
            176.1 Hz,  
            177.3 Hz,  
            178.6 Hz,  
            181.2 Hz,  
            181.8 Hz,  
            183.2 Hz,  
            183.8 Hz,  
            185.2 Hz,  
            186.6 Hz,  
            188 Hz,  
            188.7 Hz,  
            189.4 Hz,  
            192.3 Hz,  
            193.1 Hz,  
            193.8 Hz,  
            195.3 Hz,  
            196.1 Hz,  
            198.4 Hz,  
            200 Hz,  
            201.6 Hz,  
            203.3 Hz,  
            204.1 Hz,  
            204.9 Hz,  
            208.3 Hz,  
            210.1 Hz,  
            211.9 Hz,  
            212.8 Hz,  
            213.7 Hz,  
            215.5 Hz,  
            216.5 Hz,  
            217.4 Hz,  
            219.3 Hz,  
            222.2 Hz,  
            223.2 Hz,  
            225.2 Hz,  
            227.3 Hz,  
            230.4 Hz,  
            231.5 Hz,  
            232.6 Hz,  
            235.8 Hz,  
            238.1 Hz,  
            240.4 Hz,  
            243.9 Hz,  
            245.1 Hz,  
            246.3 Hz,  
            250 Hz
            </description>
        </member>
        <member name="P:Medtronic.SummitAPI.Classes.SenseFriendlyClockingLookup.TheTable">
            <summary>
            Dictionary table containing information to configure the Olympus RC+S to have sense friendly stimulation.
            Dictionary is keyed off of sense friendly stimulation rates with values composed of a tuple of associated firmware values for ensuring sense-friendly behaviour.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SenseFriendlyClockingLookup.#ctor">
            <summary>
            Creates the table for sense-friendly stimulation rates
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.SenseFriendlyClockingLookup.senseFriendlyRatesHz">
            <summary>
            List of the sense friendly stimulation rates in Hz. Will be nulled once constructor is called, use the table instead
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.EventNames">
            <summary>
            Standardized Event Names for non-customized event logging
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.EventNames.Seizure">
            <summary>
            Standardized event for logging seizure events
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.EventNames.HFO">
            <summary>
            Standardized event for logging detected high frequency oscillations
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.ConnectReturn">
            <summary>
            Flag Enumeration that returns the SummitSystem state after a connection attempt.
            Critical Failures during initialization closes the INS session due to either system incompatabilities or communication failures. Check LastAPIReturnInfo to determine error source before attmepting to connect again.
            Warnings may be issued by the connection attempt, but the session is allowed to proceeded. Multiple warnings may be issued, use HasFlag() to check for specific warning conditions.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.Success">
            <summary>
            Successful session start, however warning flags may still be present. Check warning flags for potential issues or concerns reported by the INS.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.CriticalError">
            <summary>
            Critical Failure: SummitSystem was not able to connect due to incompatibility issues. Check the APIReturnInfo. SummitSystem can not be created with the current configuration.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.InitializationError">
            <summary>
            Initialization Failure: SummitSystem received a non-critical error during initialization. These errors are due to communication or data corruption. You may retry the connection attempt.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningNoSubjectId">
            <summary>
            Initialization Warning: Subject Info Block has not been properly configured in 32K flash, either never written, is empty, or contains no printable characters. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningUnexpectedSubjectInfoFormat">
            <summary>
            Initialization Warning: The Subject Info block in 32K flash is of an unknown format. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningBadSubjectInfoCRC">
            <summary>
            Initialization Warning: The subject info data CRC stored in the 32K flash is not correct. Subject info data corruption may have occured. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningMemoryCorruptionCheckFailed">
            <summary>
            Initialization Warning: The system was not able to check for memory corruption. Check flash mirror manually. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningCorruptedMemory">
            <summary>
            Initialization Warning: Memory corruption has occured. Check flash mirror for specifics. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningUnexpectedFlashFormatHeader">
            <summary>
            Initialization Warning: The Flash Format Header in the Authenticated region of memory is of an unexpected value. Subject Info and RLP Info may not populate. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningBadFlashHeaderCRC">
            <summary>
            Initialization Warning: The Flash Format Header CRC stored in the 32K flash is not correct. Flash Format Header data corruption may have occured. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningBadPtmBlockCRC">
            <summary>
            Initialization Warning: The PTM block CRC stored in the 32K flash is not correct. PTM/RTM data corruption may have occured. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ConnectReturn.WarningBadPtmBlockRead">
            <summary>
            Initialization Warning: When attempting to check the PTM block CRC, there was a reading failure. PTM/RTM data corruption state is unknown. Created SummitSystem is usable.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.APIRejectCodes">
            <summary>
            A Reject Code generated by the API, not from the INS
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.NoError">
            <summary>
            Value = 0: No error, command executed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.NullArgument">
            <summary>
            Value = 1: A null argument or parameter was passed to the DLL, command not executed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InvalidParameter">
            <summary>
            Value = 2: An invalid parameter was passed to the DLL, examine function description, command not executed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.UnclonableParameter">
            <summary>
            Value = 3: Parameter passed is not able to be cloned, re-examine description, command not executed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.UnableToSyncRequiredInfo">
            <summary>
            Value = 4: In order to complete the requested action, the API needs to sync data from the INS but was unable to do so
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.NoValidSenseFriendlyRate">
            <summary>
            Value = 5: Step stimulation parameter passed was too small to find a sense-friendly rate between current rate and requested rate
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.UnsupportedStimRate">
            <summary>
            Value = 6: Requested stimulation rate is not supported due to firmware resolution restrictions.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.BadCommandLibCast">
            <summary>
            Value = 7: Command lib cast returned null
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.UnexpectedException">
            <summary>
            Value = 8: API experienced a totally unexpected exception.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.IsDisposed">
            <summary>
            Value = 9: API has already been disposed, due to either user action or a failed session recovery attempt. Create a new SummitSystem using the SummitManager.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.NoInsConnected">
            <summary>
            Value = 10: No implanted device connected, command not executed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.ApiInitializationNotDone">
            <summary>
            Value = 11: Summit API initialization not complete, wait for it to complete before attempting to make API calls.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsConnectionAttemptsExceeded">
            <summary>
            Value = 12: During session creation, the INS connection failed too many times. Move CTM and try again.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitIdCommFailed">
            <summary>
            Value 33: During session creation, the INS failed to send a parsable response to initial query. Retry.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitIdFailed">
            <summary>
            Value = 20: During session creation, the INS failed to return with it's ID. Retry.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsDeviceIdMismatch">
            <summary>
            Value = 21: During session creation, the INS connected to did not match the passed parameter. Move CTM and try again
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsDeviceNotOlympus">
            <summary>
            Value = 22: During session creation, the INS connected to was not an Olympus RC+S. Not compatible with SummitAPI
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsSyncFailedAfterCheckpointRestore">
            <summary>
            Value = 23: After a therapy checkpoint occured, the system was not able to successfully sync down the therapy state.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsBadResponseConsumeBytesError">
            <summary>
            Value = 25: Frame Consume bytes returned false, improperly formatted data returned
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitIncompatibleFirmware">
            <summary>
            Value = 26: Firmware ID is not compatible with this version of Summit API
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitBadSubjectInfoCRC">
            <summary>
            Value = 27: During initialization the INS calculated CRC does not match the CRC of the received Subject Info CRC
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitFlashCrcMismatch">
            <summary>
            Value = 28: During initialization the INS calculated CRC does not match the CRC of the received authenticated flash format header.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitFlashFormatCastError">
            <summary>
            Value = 29: During initialization, there was a critical error parsing the Flash Format Header.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitBadCommSubject">
            <summary>
            Value = 30: During initialization, there was a critical communication error when asking the device for the subject info from flash.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitBadCommSubjectCRC">
            <summary>
            Value = 27: During initialization, there was a critical communication error when asking the device for the subject info flash CRC.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsInitBadSubjectCast">
            <summary>
            Value 28: During initialization, there was a critical error when casting the subject info from flash into the subject info structure.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.NoCtmConnected">
            <summary>
            Value = 40: No CTM/telemetry connected, cannot execute a command
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsAlreadyConnected">
            <summary>
            Value = 41: CTM/telemetry is already connected to an INS, cannot connect to it again
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.CtmCommandTimeout">
            <summary>
            Value = 42: A command to the telemetry device timed out
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.CtmUnexpectedDisconnect">
            <summary>
            Value = 43: The CTM has unexpectedly disconnected, API will attempt to restabilish connection. If reconnect fails, isDisposed will be set to true.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsUnexpectedFlashFormat">
            <summary>
            Value = 50: 32K Flash written with an unexpected format, may not be parsed correctly or additional unparsed information.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsBadRtmPtmBlock">
            <summary>
            Value = 51: 32 Flash sector with RTM/PTM information is bad, may not have been written correctly or corrupted.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsBadSubjectInfoBlock">
            <summary>
            Value = 52: The frame containing the subject info failed to be correctly parsed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.LogsNotStarted">
            <summary>
            Value = 60: Logging function called when logs have not been started yet. Either start a session or try again
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.OrcaRegistrationFailed">
            <summary>
            Value = 61: ORCA Daemon not running, nor able to be started. Start the service or install ORCA.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsBadLatencyTest">
            <summary>
            Value = 62: Too many failures during INS Latency Test
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsBadLeadIntegrityTest">
            <summary>
            Value = 63: Lead Integrity test took too long, timed out.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.InsCommandNotExecutedDuetoBatchError">
            <summary>
            Value = 64: A previous command in the batch errored and the INS was told to stop executing the batch.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.AdaptiveStateWriteClockError">
            <summary>
            Value = 66: A write adaptive state failed due to clocking configuration error, try again.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.TdChannelHpfNotConsistent">
            <summary>
            Value = 67: HPF filter value must be consistent across channel pairs. Channels 0 and 1 HPF filter value must be equal, same with channels 2 and 3.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.Fft1024MaxUpdateRateExceeded">
            <summary>
            Value = 68: 1024pt FFTs have a maximum update rate of 100ms in order to operate properly. Set the update rate to at least 100ms.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.Fft64WindowNotHann100">
            <summary>
            Value = 69: 64pt FFts can only use the 100% Hann window.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.FftBinsRequestedOutsideValidRange">
            <summary>
            Value = 70: Max streamable bin exceeded with requested offset + bin number. When using 64 point FFT, max streamable bin index is 31. When using 256 point FFT, max streamable bin index is 127. When using 1024 point FFT, max streamable bin index is 511.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.GroupSwitchFailedNoValidProgram">
            <summary>
            Value = 71: The Group Switch command failed because the group being switched to does not have a valid program.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.APIRejectCodes.OrcaImproperlyConfigured">
            <summary>
            Value = 72: ORCA keys not present in system registry, ensure ORCA has been properly configured as described in user manual
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.ManagerConnectStatus">
            <summary>
            Enumeration that contains results of the last CTM connection attempt
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.Unconnected">
            <summary>
            Initialized CTM Manager, unconnected to device
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.Success">
            <summary>
            CreateSummit succeeded and created a valid SummitSystem
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.FailedInvalidTelemetry">
            <summary>
            CreateSummit failed, did not specify valid telemetry
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.FailedConnect">
            <summary>
            CreateSummit failed, comm platform was not able to begin connection attempt
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.FailedTimedOut">
            <summary>
            CreateSummit failed, CTM start session timed out
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.FailedCTMVersionCheck">
            <summary>
            CreateSummit failed, CTM version check failed.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.FailedIncompatibleCTM">
            <summary>
            CreateSummit failed, CTM firmware is not compatible
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Classes.ManagerConnectStatus.FailedCtmSilence">
            <summary>
            CreateSummit failed, CTM failed to be silenced
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Classes.SummitManager">
            <summary>
            An object to keep track of and manage Summit Systems that need to command and control Olympus RC+S devices
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.#ctor(System.String,System.Int32,System.Boolean)">
            <summary>
            Creates the Summit Management object, which is used to instantiate Summit Telemetry and INS communication
            </summary>
            <param name="projectId">The ORCA Project ID for data management purposes</param>
            <param name="streamQueueSize">Queue length for data streaming from INS to the Summit API. Not recommended to change unless your system is too slow to keep up with configured data rate.</param>
            <param name="verboseTraceLogging">Enables or disables the verbose communication-level logging of unparsed bytestream to/from INS.</param>
            <exception cref="T:System.Exception">SummitManager throws exceptions if it cannot create or open a Summit Manager History file. It will attempt up to 10 times, incrementing the last digit every time before throwing an exception to the user.</exception>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.onAppUnhandledException(System.Object,System.UnhandledExceptionEventArgs)">
            <summary>
            Event handler for unhandled application exceptions. Logs out unhandled exceptions and disposes all Summit components
            </summary>
            <param name="sender">Unhandled exception event sender</param>
            <param name="e">Unhandled exception event arguments</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.CreateSummit(Medtronic.SummitAPI.Classes.SummitSystem@,Medtronic.TelemetryM.InstrumentInfo,Medtronic.TelemetryM.InstrumentPhysicalLayers,System.UInt16,System.Byte)">
            <summary>
            Creates a Summit instantaition using a defined telemetry method.
            </summary>
            <param name="theTelemetry">Instrument to use to connect to the INS</param>
            <param name="theSummitSystem">The output buffer where the created Summit shall be instantiated.</param>
            <param name="connectionType">Indicates which physical communication channel to use to connect to the telemetry</param>
            <param name="telemetryMode">The telemetry mode to use between CTM and INS, advanced users only.</param>
            <param name="telemetryRatio">The telemetry uplink/downlink ratio to use between CTM and INS, advanced users only.</param>
            <returns>Returns the Summit system if the telemetry is Summit compatible, Null otherwise or if timeout occurs.</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.DisposeSummit(Medtronic.SummitAPI.Classes.SummitSystem)">
            <summary>
            Properly disposes a SummitSystem object and cleans up telemetry objects.
            </summary>
            <param name="aSummitSystem">The SummitSystem to close out</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.summitManagerConnect(Medtronic.TelemetryM.InstrumentInfo,Medtronic.TelemetryM.InstrumentPhysicalLayers)">
            <summary>
            Private manager connection function, normal release usage. Wrapped for debug test case.
            </summary>
            <param name="theTelemetry">Instrument to use to connect to the INS</param>
            <param name="connectionType">Indicates which physical communication channel to use to connect to the telemetry</param>
            <returns></returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.summitManagerDisconnect(Medtronic.TelemetryM.IInstrument)">
            <summary>
            Private manager disconnect function, normal release usage. Wrapped for debug test case.
            </summary>
            <param name="anInstrument">The client telemetry instrument that is being disconnected</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.onInstrumentConnectionChange(System.Object,System.EventArgs)">
            <summary>
            This event handler is called whenever an instrument which is in the process of connecting changes state
            </summary>
            <param name="sender">the object sending this event</param>
            <param name="e">the event arguments being sent</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.onFileLoggerIOException(System.Object,Medtronic.SummitAPI.Events.IOExceptionEvent)">
            <summary>
            Listens for SummitSystem IOException errors and decides if it needs to close out the manager or not
            </summary>
            <param name="sender">Object sending the error</param>
            <param name="theEvent">The IOException that was encountered</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.onConnectResult(System.Object,System.EventArgs)">
            <summary>
            This event handler is called whenever an instrument finishes an attempt to connect to a discovered INS.
            </summary>
            <param name="sender">the object sending this event</param>
            <param name="e">the event arguments being sent</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.onSummitSessionRecovery(System.Object,System.EventArgs)">
            <summary>
            This event handler is called if a Summit System experienced an unexpected disconnect, performs a session recovery operation
            </summary>
            <param name="sender">the object sending this event</param>
            <param name="e">the event arguments being sent</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.GetKnownTelemetry">
            <summary>
            Returns a list of instrument info objects for all previously bonded CTMs
            </summary>
            <returns>The list of all known telemetry devices</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.GetConnectedTelemetry">
            <summary>
            Returns a list of instrument info objects for all CTMs already connected to
            </summary>
            <returns>The list of all telemetry devices that are connected to a different process (busy)</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.GetUsbTelemetry">
            <summary>
            Discover new CTM through USB
            </summary>
            <returns>Looks for any previously unknown Telemetry devices that are plugged in via USB</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.LogToManagerHistory(System.String)">
            <summary>
            Logs a message to the manager history file
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.Dispose(System.Boolean)">
            <summary>
            Safely disposes of all Summit resources, closes all active Summit systems and management resources
            </summary>
            <param name="disposing">If disposing == false, Summit objects will not be disposed but the CTM Manager will be, NOTE: Summit objects won't function after CTM Manager closure</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Classes.SummitManager.Dispose">
            <summary>
            Safely disposes of all Summit resources, closes all active Summit systems and management resources
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.AdaptiveDetectEvent">
            <summary>
            Object containing the event args for a new adaptive stim detector event packet
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.#ctor(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.Packets.DetectionAdaptivePacket,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event Detection args
            </summary>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="theAdaptivePacket">Received packet from the INS containing the event information</param>
            <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.CurrentAdaptiveState">
            <summary>
            Byte indicating the current adaptive state number
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.CurrentProgramAmplitudesInMilliamps">
            <summary>
            Byte array incidating the current program amplitudes
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.IsInHoldOffOnStartup">
            <summary>
            Boolean indicating if the INS embedded algorith is in hold-off state
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.Ld0DetectionStatus">
            <summary>
            LD0 classifier status information
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.Ld0Status">
            <summary>
            The status of the first LD classifier
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.Ld1DetectionStatus">
            <summary>
            LD1 classifier status information
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.Ld1Status">
            <summary>
            The status of the first LD classifier
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.PreviousAdaptiveState">
            <summary>
            The previous adaptive state that the device was in before transition
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.SensingStatus">
            <summary>
            Enumeration indicating the sensing state of the INS
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.StateEntryCount">
            <summary>
            Number of times current state has been entered since last LD diagnostic mirror reset
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.StateTime">
            <summary>
            Time in FFT Interval Ticks(typically 200ms) spent in current state since last LD diagnostic mirror reset
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.StimFlags">
            <summary>
            The adaptive algorithm's stimulation flags, indficate if a program is currently ramping
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.AdaptiveDetectEvent.StimRateInHz">
            <summary>
            The current rate period of the embedded group's stimulation
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.ConnectResultEvent">
            <summary>
            Event for SummitManager logging of StartInsSession results
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Events.ConnectResultEvent.TheConnectReturn">
            <summary>
            The ConnectReturn flags that the StartInsSession function should return to the host application
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Events.ConnectResultEvent.TheApiReturnInfo">
            <summary>
            The APIReturnInfo object that the StartInsSession returned to the host application
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.ConnectResultEvent.#ctor(Medtronic.SummitAPI.Classes.ConnectReturn,Medtronic.SummitAPI.Classes.APIReturnInfo)">
            <summary>
            Constructor for the ConnectResultEvent object
            </summary>
            <param name="aConnectReturn">The ConnectReturn flags that the StartInsSession function should return to the host application</param>
            <param name="aReturnInfo">The APIReturnInfo object that the StartInsSession returned to the host application</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.ExternalMarkerEchoEvent">
            <summary>
            Object containing the event args for an external marker echo event.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.ExternalMarkerEchoEvent.#ctor(System.Byte,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event Marker args
            </summary>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="markerByte">Marker byte received from the INS.</param>
            <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.ExternalMarkerEchoEvent.TheMarkerByte">
            <summary>
            The Marker type that was echoed back from the INS
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.IOExceptionEvent">
            <summary>
            Event class that is used by the FileLogger class to report to the SummitSystem, and by the SummitSystem to report to the SummitManager, that an unexpected logging exception has occured.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Events.IOExceptionEvent.theException">
            <summary>
            Buffer object containing the caught exception
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.IOExceptionEvent.#ctor(System.IO.IOException)">
            <summary>
            Public constructor for the IOExceptionEvent class
            </summary>
            <param name="anException">The IOException that was caught by the FileLogger</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.LoopRecordUpdateEvent">
            <summary>
            Object containg the event args for a loop record status update event packet
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.LoopRecordUpdateEvent.#ctor(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.LoopRecordingTriggers,Medtronic.NeuroStim.Olympus.DataTypes.Sensing.LoopRecordingFlags,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event Loop Recording args
            </summary>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="loopRecordFlags"> The flags from the loop record status update event</param>
            <param name="theLRTriggers">Indicates the process by which the loop record was triggered.</param>
            /// <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.LoopRecordUpdateEvent.LoopRecordTriggers">
            <summary>
            Indicates the process by which the loop record was triggered.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.LoopRecordUpdateEvent.LoopRecordStatusFlags">
            <summary>
            The flags from the loop record status update event
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.SensingEventAccel">
            <summary>
            Object containing the event args for a new accel packet
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.SensingEventAccel.#ctor(System.Double[],Medtronic.NeuroStim.Olympus.DataTypes.Sensing.Packets.AccelPacket,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event Accelerometer args
            </summary>
            <param name="gains">The scaling factor to apply in order to convert into real-units.</param>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="thePacket">The accelerometer data packet received from the INS.</param>
            <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventAccel.SampleRate">
            <summary>
            Enumeration indicating the accelerometer sampling rate
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventAccel.XSamples">
            <summary>
            X-axis accelerometer samples
            If device is lying flat on table with serial number readable and facing you, X positive direction is vector in plane with the device going straight out top edge.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventAccel.YSamples">
            <summary>
            Y-axis accelerometer samples
            If device is lying flat on table with serial number readable and facing you, Y positive direction is vector in plane with the device going out left edge.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventAccel.ZSamples">
            <summary>
            Y-axis accelerometer samples
            If device is lying flat on table with serial number readable and facing you, Z positive direction is vector straight out of the device upwards.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventAccel.Units">
            <summary>
            String indicating the units of the ChannelSamples data points
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.SensingEventFFT">
            <summary>
            Object containing the event args for a new FFT domain packet
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.SensingEventFFT.#ctor(System.Collections.Generic.Dictionary{Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SenseTimeDomainChannel,System.Double},Medtronic.NeuroStim.Olympus.DataTypes.Sensing.Packets.SensingFftPacket,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event FFT args
            </summary>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="lfpScalars">The scaling factor to apply to raw data to convert into "real" units. Does not account for window.</param>
            <param name="theFftPacket">The FFT data packet received from the INS.</param>
            <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventFFT.FftOutput">
            <summary>
            The FFT output bins from the INS. Check FFT settings for configuration
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventFFT.Channel">
            <summary>
            Byte indicating which FFT channel is being streamed, 0-3.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventFFT.FftSize">
            <summary>
            The length of the FFT that was performed
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventFFT.SampleRate">
            <summary>
            Enumeration indicating the time domain sampling rate
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventFFT.Units">
            <summary>
            tring indicating the units of the Bins data points
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.SensingEventPower">
            <summary>
            Object containing the event args for a new power channel packet
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.SensingEventPower.#ctor(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.Packets.SensingPowerPacket,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event Power args
            </summary>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="thePowerPacket">The power bin summation packet received from the INS.</param>
            <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventPower.Bands">
            <summary>
            Raw band power summation data, in bytes
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventPower.FftSize">
            <summary>
            The length of the FFT that was performed and summed into the bins
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventPower.IsPowerChannelOverrange">
            <summary>
            Boolean indicating if the channel gain is too high and the power output is unreliable. Last "good" value will be returned until output becomes valid.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventPower.SampleRate">
            <summary>
            Enumeration indicating the time domain sampling rate
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventPower.ExternalValuesMask">
            <summary>
            Enumeration indicating if any power channels are being overwritten in detector test mode.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventPower.ValidDataMask">
            <summary>
            Enumeration indicating power channel valid status
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.SensingEventTD">
            <summary>
            Object containing the event args for a new time domain packet
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Events.SensingEventTD.#ctor(System.Collections.Generic.Dictionary{Medtronic.NeuroStim.Olympus.DataTypes.Sensing.SenseTimeDomainChannel,System.Double},Medtronic.NeuroStim.Olympus.DataTypes.Sensing.Packets.SensingTimeDomainPacket,System.DateTime,System.DateTime)">
            <summary>
            Constructor for the Sensing Event TD args
            </summary>
            <param name="generationTime">PC time estimate for when the packet was generated on the INS</param>
            <param name="lfpScalars">The scaling factor to apply to the raw data to convert into real-units.</param>
            <param name="thePacket">The packet of time-domain data received from the INS.</param>
            <param name="rxTime">Time the PC received the streaming packet</param>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventTD.DebugInfo">
            <summary>
            Time domain packet debug info enumeration
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventTD.IncludedChannels">
            <summary>
            Flag enumeration indicating which TD channels are included in the ChannelSamples data
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventTD.SampleRate">
            <summary>
            Enumeration indicating the time domain sampling rate
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventTD.ChannelSamples">
            <summary>
            Time domain data received from the INS
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventTD.EvokedMarker">
            <summary>
            Evoked response marker stream information form the INS
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SensingEventTD.Units">
            <summary>
            String indicating the units of the ChannelSamples data points
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.SummitEventArgs">
            <summary>
            Base class for Summit streaming events
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SummitEventArgs.GenerationTimeEstimate">
            <summary>
            An estimate of when this packet was generated in the INS
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SummitEventArgs.PacketRxTime">
            <summary>
            The PC time that this packet was received by the API.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.SummitEventArgs.Header">
            <summary>
            The packet header that generated this event.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.TimeStampEvent">
            <summary>
            Empty Event case for the timestamp event, not thrown to user, just used to push into correct logging loop
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.TimeStampEvent.LatencyMilliseconds">
            <summary>
            Latest latency measurement results performed by the API.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.UnexpectedCtmDisconnectEvent">
            <summary>
            Empty class for indicating to threadpool invoke that an unexpected link status event needs to be thrown.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Events.UnexpectedLinkStatusEvent">
            <summary>
            Object containing the event args for a link status error event
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.UnexpectedLinkStatusEvent.TheLinkStatus">
            <summary>
            The link status error information
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Events.UnexpectedLinkStatusEvent.ReceivedTime">
            <summary>
            The time this link status error was received
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.FlashFormatHeader">
            <summary>
            Structure to read and write the flash format header from 32K sector 127
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.ExpectedAuthBlockVersion">
            <summary>
            Public accessor to the expected authenticated block version number for this version of the API.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.AuthBlockVersion">
            <summary>
            Version identifier for the authenticated block format. 
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.RlpApiVersion">
            <summary>
            Version identifier for the API of the RLP that wrote this header. 
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.RlpAppVersion">
            <summary>
            Version identifier for the RLP that wrote this header.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.SubjectInfoSectorStart">
            <summary>
            Sector index where the subject info data starts.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.SubjectInfoSectorNum">
            <summary>
            Number of sectors dedicated to the subject info. Each sector is 256 bytes long.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.RlpNotepadSectorStart">
            <summary>
            Sector index where the RLP notepad data starts.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.RlpNotepadSectorNum">
            <summary>
            Number of sectors dedicated to the RLP notepad. Each sector is 256 bytes long.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.reserved">
            <summary>
            Reserved for future use.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.FlashFormatHeaderCRC">
            <summary>
            CRC of the Flash Format Header. Placed at end of sector. 
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.FlashFormatHeader.CrcValid">
            <summary>
            Indicates if the CRC field in the flash version header matches the actual CRC of all fields in the structure.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.FlashFormatHeader.GetLength">
            <summary>
            Returns the length of the flash format header block, 256 bytes
            </summary>
            <returns>Returns the length of the flash format header block, 256 bytes</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.FlashFormatHeader.#ctor">
            <summary>
            Constructor for the FlashFormatHeader data class.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.FlashFormatHeader.UpdateCRC">
            <summary>
            Updates the CRC based on the current fields - needed since there is no custom get/set bytes
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.LastPtmRtmInfo">
            <summary>
            Contains all information about the last connected Patient Telemetry Module (PTM) and Recharge Telemetry Module (RTM)
            Not data type because this never needs to be written back to device - GetBytes not needed or desired.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.PtmSerialNumber">
            <summary>
            The PTM serial number string in Flash, 10 characters
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.PtmAppVersion">
            <summary>
            The PTM application version with first byte being major and second byte being minor
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.PtmCompatabilityId">
            <summary>
            The PTM compatability version number with first byte being major and second byte being minor
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.RtmSerialNumber">
            <summary>
            The RTM serial number string in Flash, 10 characters
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.RtmAppVersion">
            <summary>
            The RTM application version with first byte being major and second byte being minor
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.RtmCompatabilityId">
            <summary>
            The RTM compatability version number with first byte being major and second byte being minor
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.DataCrc">
            <summary>
            CRC array of the flash blocks used to access the last RTM and PTM information. First element is for block 0, second element is for block 2.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.CrcValid">
            <summary>
            Indicates if the CRC values in the flash blocks match the computed CRC on the structure.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.#ctor">
            <summary>
            Constructor (empty) for the LastPtmRtmInfo class
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.LastPtmRtmInfo.setBytes(System.Collections.Generic.List{System.Byte})">
            <summary>
            Sets the bytes of the PTM/RTM info based on raw bytes received from the 32K flash
            </summary>
            /// <param name="byteBuffer">Raw Byte List from 32K that should be casted into the various strings contained in the RTM/PTM Info object</param>
            <returns>boolean value indicating if the setting of bytes succeeded based on the list given</returns>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.LeadTargetCoordinates">
            <summary>
            Structure defining the lead targetting coordinate information
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LeadTargetCoordinates.TheCoordinateType">
            <summary>
            Which coordinate system is being used to generate the coordinate parameters
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LeadTargetCoordinates.TargetCoordinate1">
            <summary>
            First target parameter
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LeadTargetCoordinates.TargetCoordinate2">
            <summary>
            Second target parameter
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.LeadTargetCoordinates.TargetCoordinate3">
            <summary>
            Third target parameter
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.LeadTargetCoordinates.GetLength">
            <summary>
            Returns the size of this object in number of bytes in memory
            </summary>
            <returns>The number of bytes in this object</returns>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.SubjectInfo">
            <summary>
            Contains all Subject info programmed onto the Olympus RC+S
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.ExpectedSubjectDataFormat">
            <summary>
            Public accessor to the expected subject data block version number for working with this version of the API.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.ExpectedRlpToPtmSubBlockVersion">
            <summary>
            Public accessor to the expected Rlp to Ptm subdata block version number for working with this version of the API.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.SubjectDataFormat">
            <summary>
            Version identifier for the subject info data format
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.ID">
            <summary>
            Subject ID string in Flash, 40 max characters
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.DateOfBirth">
            <summary>
            DateTime object that contains the subject's date-of-birth
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.Sex">
            <summary>
            String indicating the subject's gender at birth.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.Handedness">
            <summary>
            String indicating the subject's dominant hand
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.Diagnosis">
            <summary>
            String indicating the subject's disease or condition diagnosis, 40 max characters
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.ClinicianNotes">
            <summary>
            250-character space for clinician notes from the RLP
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.SymptomOnsetDate">
            <summary>
            Datetime when the subject first began experiencing symptoms.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.DiagnosisDate">
            <summary>
            Datetime when the subject first began experiencing symptoms.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.Extensions">
            <summary>
            Describes which extensions were used in surgery. Must be assigned as an array of length 2. Individual array elements cannot be assigned to.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.InsImplantLocation">
            <summary>
            Describes where in the patient this device was implanted
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.ImplantedLeads">
            <summary>
            Describes which implanted leads were used. Must be assigned as an array of length 4. Individual array elements cannot be assigned to.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.LeadLocation">
            <summary>
            Location of the leads respective to INS bore, contacts, etc. Must be assigned as an array of length 4. Individual array elements cannot be assigned to.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.LeadTargets">
            <summary>
            Implanted lead targets, 4 string array, each string is 10 chars long
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.TargetCoordinates">
            <summary>
            Implanted lead target coordinates. Must be assigned as an array of length 4. Individual array elements cannot be assigned to.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.DisableAnnotationEnforcement">
            <summary>
            Boolean indicating if the implanted INS allows the host application to disable annotations.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.RlpToPtmSubBlockVersion">
            <summary>
            Version information for the RLP to PTM subblock definition.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.PtmSummitSettings">
            <summary>
            Enumeration which describes PTM-related Summit settings. This includes if the patient is allowed to reset their device to the last clinical settings and if they have a charge alert enabled.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.ProgramNames">
            <summary>
            String array of all configured program names, 13 unicode characters maximum each.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.GroupAdjustSettings">
            <summary>
            Enumeration array with an element for each INS stimulation group. Describes which parameters the PTM should allow the user to manually control.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.DataCRC">
            <summary>
            CRC of subject info to be stored in flash for data integrity purposes
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Flash.SubjectInfo.CrcValid">
            <summary>
            Indicates if the CRC value in the subjectInfoCRC field matches the actual CRC of all fields in the structure.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.SubjectInfo.#ctor">
            <summary>
            Constructor for the SubjectInfo object using the byte list received from a 32K flash read
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.SubjectInfo.SetBytes(System.Byte[])">
            <summary>
            Sets the bytes of the subject info based on raw bytes received from the 32K flash
            </summary>
            /// <param name="byteBuffer">Raw Byte List from 32K that should be casted into the various strings contained in the Subject Info object</param>
            <returns>boolean value indicating if the setting of bytes succeeded based on the list given</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.SubjectInfo.GetBytes">
            <summary>
            Creates a byte list for the subject info to be programed back into 32K flash memory
            </summary>
            <returns>The list of raw bytes that contain all the Subject Info to be programmed into flash</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.SubjectInfo.GetLength">
            <summary>
            Retrieves the length of the subject info array stored on the INS
            </summary>
            <returns>Returns the length of the byte array that contains the subject info</returns>
        </member>
        <member name="M:Medtronic.SummitAPI.Flash.SubjectInfo.UpdateCRC">
            <summary>
            Updates the CRC field based on the current information stored in the structure.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.TargetCoordinateType">
            <summary>
            Enumeration defining the lead target information
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.TargetCoordinateType.None">
            <summary>
            No targetting performed or no lead defined
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.TargetCoordinateType.MNI">
            <summary>
            MNI Targetting
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.TargetCoordinateType.Talairach">
            <summary>
            Talairach Targetting
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.TargetCoordinateType.Frame">
            <summary>
            Frame Targetting
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.SubjectSex">
            <summary>
            Enumeration defining the sex at birth of the patient
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.SubjectSex.NotEntered">
            <summary>
            No information entered on RLPO
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.SubjectSex.Male">
            <summary>
            Male at birth
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.SubjectSex.Female">
            <summary>
            Female at birth
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.SubjectSex.Intersex">
            <summary>
            Intersex at birth
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.Handedness">
            <summary>
            Enumeration defining handedness of the subject
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.Handedness.NotEntered">
            <summary>
            No information entered on RLP
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.Handedness.Right">
            <summary>
            Right handed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.Handedness.Left">
            <summary>
            Left handed
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.Handedness.Ambi">
            <summary>
            Ambidexterous
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.ImplantExtensions">
            <summary>
            Enumeration defining extensions used to connect leads to INS
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantExtensions.None">
            <summary>
            No extension used
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantExtensions.Ext8to1by4">
            <summary>
            Eight contacts on the INS side to a single 4 contact connector.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantExtensions.Ext8to2by4">
            <summary>
            Eight contacts on the INS side with the eight contacts split (bifricated) to two four-contact connectors on the lead side.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.ImplantLeads">
            <summary>
            Enumeration defining the implanted leads used with the INS
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantLeads.None">
            <summary>
            No lead implanted
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantLeads.Lead3387">
            <summary>
            Medtronic 3387 Lead
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantLeads.Lead3389">
            <summary>
            Medtronic 3389 Lead
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantLeads.Lead3391">
            <summary>
            Medtronic 3391 Lead
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantLeads.ResumeII">
            <summary>
            Medtronic Resume II strip lead
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.ImplantLeads.Other">
            <summary>
            A different lead used.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.InsImplantLocation">
            <summary>
            Enumeration defining the implant location of the INS in the subject's body
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.NotEntered">
            <summary>
            INS implant location not entered by clinician
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.ChestLeft">
            <summary>
            INS implanted in the subject's left chest
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.ChestRight">
            <summary>
            INS implanted in the subject's right chest
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.AbdomenLeft">
            <summary>
            INS implanted in the subject's left abdomen
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.AbdomenRight">
            <summary>
            INS implanted in the subject's right abdomen
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.BackLeft">
            <summary>
            INS implanted in the subject's left back
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.BackRight">
            <summary>
            INS implanted in the subject's right back
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.ButtockLeft">
            <summary>
            INS implanted in the subject's left buttock
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.ButtockRight">
            <summary>
            INS implanted in the subject's right buttock
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.InsImplantLocation.Other">
            <summary>
            INS implanted in an undefined location.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.LeadHemisphereLocation">
            <summary>
            Enumeration defining which hemisphere of the brain a lead is implanted into
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.LeadHemisphereLocation.None">
            <summary>
            Lead not implanted in a brain hemisphere
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.LeadHemisphereLocation.Left">
            <summary>
            Lead implanted in the left hemisphere
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.LeadHemisphereLocation.Right">
            <summary>
            Lead implanted in the right hemisphere
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.GroupAdjustability">
            <summary>
            Flag enumeration that defines which parameters the PTM allows the patient to manually control. 
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.None">
            <summary>
            No configurable parameters
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program1Amplitude">
            <summary>
            Patient can adjust program 1 amplitude with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program1PulseWidth">
            <summary>
            Patient can adjust program 1 pulse width with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.reserved_bit2">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program2Amplitude">
            <summary>
            Patient can adjust program 2 amplitude with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program2PulseWidth">
            <summary>
            Patient can adjust program 2 pulse width with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.reserved_bit5">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program3Amplitude">
            <summary>
            Patient can adjust program 3 amplitude with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program3PulseWidth">
            <summary>
            Patient can adjust program 3 pulse width with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.reserved_bit8">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program4Amplitude">
            <summary>
            Patient can adjust program 4 amplitude with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.Program4PulseWidth">
            <summary>
            Patient can adjust program 1 pulse width with PTM
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.reserved_bit11">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.GroupRate">
            <summary>
            Patient can adjust the group's rate.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.GroupAmplitude">
            <summary>
            Patient can adjust all of the group amplitudes simulatenously.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.GroupCycling">
            <summary>
            Patient can adjust the group's cycling
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.GroupAdjustability.reserved_bit15">
            <summary>
            Not used.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.PtmSummitSettingFlags">
            <summary>
            Flag enum that describes the PTM's Summit related settings.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.PtmSummitSettingFlags.None">
            <summary>
            No Summit specific settings
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.PtmSummitSettingFlags.PatientAlertEnabled">
            <summary>
            The PTM will remind the patient with a daily alert to check their INS battery.
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.PtmSummitSettingFlags.ResetToClinician">
            <summary>
            The PTM will allow the user to restore the therapy settings to the last clinical checkpoint.
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Flash.FlashBlockOffset">
            <summary>
            Enumeration that provides the byte offset for specific data structures in the flash memory
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock0">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock1">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock2">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock3">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock4">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock5">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock6">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock7">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.PtmReadWriteBlock8">
            <summary>
            A block of PTM controlled space on INS 32K
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock0">
             <summary>
            A block of user space on INS 32K 
             </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock1">
             <summary>
            A block of user space on INS 32K 
             </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock2">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock3">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock4">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock5">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock6">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock7">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock8">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock9">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock10">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock11">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock12">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock13">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock14">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock15">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock16">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock17">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock18">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock19">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock20">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock21">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock22">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock23">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock24">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock25">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock26">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock27">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock28">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock29">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock30">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock31">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock32">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock33">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock34">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock35">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock36">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock37">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock38">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock39">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock40">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock41">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock42">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock43">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock44">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock45">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock46">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock47">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock48">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock49">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock50">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock51">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock52">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock53">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock54">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock55">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock56">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock57">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock58">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock59">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock60">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock61">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock62">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock63">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock64">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock65">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock66">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock67">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock68">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock69">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock70">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock71">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock72">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock73">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock74">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock75">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock76">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock77">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock78">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock79">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock80">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock81">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock82">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock83">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock84">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock85">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock86">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock87">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock88">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock89">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock90">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock91">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock92">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock93">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock94">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock95">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock96">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock97">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock98">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock99">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock100">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock101">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.UserBlock102">
             <summary> 
            A block of user space on INS 32K 
             </summary> 
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData0">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData1">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData2">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData3">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData4">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData5">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData6">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData7">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData8">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData9">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData10">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData11">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData12">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData13">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData14">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="F:Medtronic.SummitAPI.Flash.FlashBlockOffset.RlpAuthData15_formatHeader">
            <summary>
            Unused authenticated space in 32K flash
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.DetectorTestDiagnostic">
            <summary>
            Used to log a power override detector test to the event log
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.DetectorTestDiagnostic.DiagnosticType">
            <summary>
            The type of diagnostic event being logged, initialized to "PowerOverrideDetectorTest"
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.DetectorTestDiagnostic.OverrideChannels">
            <summary>
            The channels being overridden in this test
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.DetectorTestDiagnostic.OverrideValues">
            <summary>
            The values being applied to the channels overridden.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.DetectorTestDiagnostic.#ctor(Medtronic.NeuroStim.Olympus.DataTypes.Sensing.DetectionInputs,System.UInt32[])">
            <summary>
            Constructor for the object used to log a power override detector test to the event log
            </summary>
            <param name="theOverrideChannels">The channels being overridden in this test</param>
            <param name="theOverrideValues">The values being applied to the channels overridden.</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.FileLogger">
            <summary>
            Low level data logger to PC filesystem. Includes JSON convience methods
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.#ctor(System.String,System.IO.FileMode)">
            <summary>
            Constructor for the FileLogger object
            </summary>
            <param name="thePath">Directory path to the file to be logged to</param>
            <param name="theFileMode">Filemode for the file to open</param>
        </member>
        <member name="F:Medtronic.SummitAPI.Logging.FileLogger.disposedValue">
            <summary>
            IDisposable disposed flag
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.Dispose">
            <summary>
            Disposal method
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.Dispose(System.Boolean)">
            <summary>
            Dispose worker function, protected.
            </summary>
            <param name="disposing">flag indicating if disposal should occur</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.StringToFile(System.String)">
            <summary>
            Private worker function: logs a string out to the file
            </summary>
            <param name="aString">the string to be logged</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.WriteJsonObject``1(``0,System.String,System.Runtime.Serialization.Json.DataContractJsonSerializer)">
            <summary>
            Writes an object's parameters out to file in JSON format with a specified label and serializer.
            </summary>
            <typeparam name="T">The object type that is being logged</typeparam>
            <param name="theObject">The object to log</param>
            <param name="label">The top level label to apply to the object</param>
            <param name="serializer">The serializer to use to convert the object into a loggable string</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.WriteJsonObject``1(``0,System.String)">
            <summary>
            Writes an object's parameters out to file in JSON format with a specified label. Creates the serializer based on the object type.
            </summary>
            <typeparam name="T">The object type that is being logged</typeparam>
            <param name="theObject">The object to log</param>
            <param name="label">The top level label to apply to the object</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.WriteJsonObject``1(``0)">
            <summary>
            Writes an object's parameters out to file in JSON format.
            </summary>
            <typeparam name="T">The object type that is being logged</typeparam>
            <param name="theObject">The object to log</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.WriteJsonObject``1(``0,System.String,System.Runtime.Serialization.Json.DataContractJsonSerializerSettings)">
            <summary>
            Writes an object's parameters out to file in JSON format with a specified label and serializer settings.
            </summary>
            <typeparam name="T">The object type that is being logged</typeparam>
            <param name="theObject">The object to log</param>
            <param name="label">The top level label to apply to the object</param>
            <param name="serializerSettings">The serializer to use to convert the object into a loggable string</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.OpenJsonFrame(System.String,System.String)">
            <summary>
            Pushes a new JSON frame onto the frame stack, must specify an open and a close bracket for proper JSON logging.
            </summary>
            <param name="openMarker">The bracketing scheme to write immediately</param>
            <param name="closeMarker">The bracket close that will be written when the close JSON frame is called on this level of the frame stack</param>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.FileLogger.CloseJsonFrame">
            <summary>
            Closes the JSON level bracketing at the top of the frame stack
            </summary>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.LatencyResultsDiagnostic">
            <summary>
            Used to log a latency test to the event log
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LatencyResultsDiagnostic.DiagnosticType">
            <summary>
            The type of diagnostic event being logged, initialized to "LatencyTestEvent"
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LatencyResultsDiagnostic.TestPacketNum">
            <summary>
            The number of packets sent to the INS in this test
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LatencyResultsDiagnostic.AverageLatency">
            <summary>
            The average time it took for a packet to travel between the PC and the INS (one-way) in terms of the units field.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LatencyResultsDiagnostic.Units">
            <summary>
            Time units of the latency results, initialized to "milliseconds"
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.LatencyResultsDiagnostic.#ctor(System.UInt32,System.Double)">
            <summary>
            Constructor of object used to log a latency test to the event log
            </summary>
            <param name="thePacketNum">The number of packets sent to the INS in this test</param>
            <param name="theLatency">The average time it took for a packet to travel between the PC and the INS (one-way) in terms of the units field.</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.LeadIntegrityDiagnostic">
            <summary>
            Used to log a lead integrity test to the event log
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LeadIntegrityDiagnostic.DiagnosticType">
            <summary>
            The type of diagnostic event being logged, initialized to "LeadIntegrityEvent"
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LeadIntegrityDiagnostic.TestElectrodes">
            <summary>
            The test electrode array that was teseted
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LeadIntegrityDiagnostic.TestResults">
            <summary>
            The results of the lead integrity test
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.LeadIntegrityDiagnostic.#ctor(System.Collections.Generic.List{System.Byte},Medtronic.NeuroStim.Olympus.DataTypes.Measurement.LeadIntegrityTestResult)">
            <summary>
            Logging structure for lead integrity tests
            </summary>
            <param name="theTestElectrodes">Array of electrodes used in test</param>
            <param name="theTestResults">The results of the lead integrity test</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.LogEvent">
            <summary>
            Used to log structured events to the event log
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LogEvent.EventName">
            <summary>
            The name of the event being logged
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LogEvent.UnixOnsetTime">
            <summary>
            The start time of the event
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LogEvent.UnixOffsetTime">
            <summary>
            The end time of the event
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LogEvent.EventType">
            <summary>
            A string indicating the type of the event being logged
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.LogEvent.EventSubType">
            <summary>
            A string indicating the subtype of the event being logged.
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.LogEvent.#ctor(System.String,System.Int64,System.Int64,System.String,System.String)">
            <summary>
            Constructor for the log event class
            </summary>
            <param name="theEventName"> The name of the event being logged</param>
            <param name="theUnixOnsetTime">The start time of the event</param>
            <param name="theUnixOffsetTime">The end time of the event</param>
            <param name="theEventType">A string indicating the type of the event being logged</param>
            <param name="theEventSubType">A string indicating the subtype of the event being logged.</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.LogUserEvent">
            <summary>
            Used to log structured events to the event log
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.LogUserEvent.#ctor(System.Int64,System.Int64,System.String,System.String)">
            <summary>
            A logged event generated by the user, all event names are "UserCustom"
            </summary>
            <param name="theUnixOnsetTime">The start time of the event</param>
            <param name="theUnixOffsetTime">The end time of the event</param>
            <param name="theEventType">A string indicating the type of the event being logged</param>
            <param name="theEventSubType">A string indicating the subtype of the event being logged.</param>
        </member>
        <member name="T:Medtronic.SummitAPI.Logging.RecordInfo">
            <summary>
            A helper class for logging out contextual information about a logging entry for cloud-development support
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.RecordInfo.HostUnixTime">
            <summary>
            Host PC time in Unix Time when this record was generated
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.RecordInfo.DeviceId">
            <summary>
            The device serial number used during the session that produced this record
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.RecordInfo.SessionId">
            <summary>
            The session record ID in which this record was produced.
            </summary>
        </member>
        <member name="P:Medtronic.SummitAPI.Logging.RecordInfo.ApiVer">
            <summary>
            The Summit API version which produced this record
            </summary>
        </member>
        <member name="M:Medtronic.SummitAPI.Logging.RecordInfo.#ctor(System.String,System.String,System.DateTime)">
            <summary>
            Construct for cloud-processing-based record generation
            </summary>
            <param name="theDevice">The current device serial number</param>
            <param name="theSession">The current session ID</param>
            <param name="theTime">The time that this record should be marked as created</param>
        </member>
    </members>
</doc>
